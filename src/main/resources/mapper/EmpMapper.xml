<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.xynu.kaoqin.mapper.EmpMapper">

    <!-- 根据用户名查找员工（用于登录） -->
    <select id="selectByUsername" resultType="org.xynu.kaoqin.entity.Emp">
        SELECT * FROM emp WHERE username = #{username}
    </select>

    <!-- 分页+条件查询，联表查部门名 -->
    <select id="selectByPage" resultType="org.xynu.kaoqin.entity.Emp">
        SELECT e.*, d.name AS deptName
        FROM emp e
        LEFT JOIN dept d ON e.dept_id = d.id
        <where>
            <if test="name != null and name != ''">
                AND e.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="gender != null">
                AND e.gender = #{gender}
            </if>
            <if test="begin != null">
                AND e.entry_date &gt;= #{begin}
            </if>
            <if test="end != null">
                AND e.entry_date &lt;= #{end}
            </if>
        </where>
        ORDER BY e.id DESC
    </select>

    <!-- 查询总数 -->
    <select id="countByPage" resultType="long">
        SELECT COUNT(*) FROM emp
        <where>
            <if test="name != null and name != ''">
                AND name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="gender != null">
                AND gender = #{gender}
            </if>
            <if test="begin != null">
                AND entry_date &gt;= #{begin}
            </if>
            <if test="end != null">
                AND entry_date &lt;= #{end}
            </if>
        </where>
    </select>

    <!-- 查询所有，联表查部门名 -->
    <select id="selectAll" resultType="org.xynu.kaoqin.entity.Emp">
        SELECT e.*, d.name AS deptName
        FROM emp e
        LEFT JOIN dept d ON e.dept_id = d.id
        ORDER BY e.id DESC
    </select>

    <!-- 根据ID查找，联表查部门名 -->
    <select id="selectById" resultType="org.xynu.kaoqin.entity.Emp">
        SELECT e.*, d.name AS deptName
        FROM emp e
        LEFT JOIN dept d ON e.dept_id = d.id
        WHERE e.id = #{id}
    </select>

    <!-- 新增员工 -->
    <insert id="insert" parameterType="org.xynu.kaoqin.entity.Emp" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO emp (
            username, password, name, gender,
            phone, job, salary, image,
            entry_date, dept_id, create_time, update_time
        ) VALUES (
            #{username}, #{password}, #{name}, #{gender},
            #{phone}, #{job}, #{salary}, #{image},
            #{entryDate}, #{deptId}, NOW(), NOW()
        )
    </insert>

    <!-- 修改员工 -->
    <update id="update" parameterType="org.xynu.kaoqin.entity.Emp">
        UPDATE emp
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="password != null">password = #{password},</if>
            <if test="name != null">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="job != null">job = #{job},</if>
            <if test="salary != null">salary = #{salary},</if>
            <if test="image != null">image = #{image},</if>
            <if test="entryDate != null">entry_date = #{entryDate},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id}
    </update>

    <!-- 批量删除 -->
    <delete id="deleteByIds">
        DELETE FROM emp WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="countAll" resultType="int">
        SELECT COUNT(*) FROM emp
    </select>

    <select id="countByGender" resultType="int">
        SELECT COUNT(*) FROM emp WHERE gender = #{gender}
    </select>

    <select id="findLatest" resultType="org.xynu.kaoqin.entity.Emp">
        SELECT e.*, d.name AS deptName
        FROM emp e
        LEFT JOIN dept d ON e.dept_id = d.id
        ORDER BY e.entry_date DESC
        LIMIT #{limit}
    </select>

    <select id="countByDept" resultType="org.xynu.kaoqin.entity.DeptCountVO">
        SELECT d.name AS deptName, COUNT(e.id) AS count
        FROM dept d
        LEFT JOIN emp e ON d.id = e.dept_id
        GROUP BY d.id
    </select>

    <select id="selectEmps" resultType="org.xynu.kaoqin.entity.Emp">
        SELECT e.*, d.name AS deptName
        FROM emp e
        LEFT JOIN dept d ON e.dept_id = d.id
        <where>
            <if test="name != null and name != ''">
                AND e.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="gender != null">
                AND e.gender = #{gender}
            </if>
            <if test="begin != null and begin != ''">
                AND e.entry_date &gt;= #{begin}
            </if>
            <if test="end != null and end != ''">
                AND e.entry_date &lt;= #{end}
            </if>
        </where>
        <if test="sortField != null and sortOrder != null and sortField != '' and sortOrder != ''">
            ORDER BY
            <choose>
                <when test="sortField == 'id'">e.id</when>
                <when test="sortField == 'salary'">e.salary</when>
                <when test="sortField == 'entry_date'">e.entry_date</when>
                <otherwise>e.id</otherwise>
            </choose>
            ${sortOrder}
        </if>
        LIMIT #{offset}, #{pageSize}
    </select>

    <select id="countEmps" resultType="long">
        SELECT COUNT(*) FROM emp e
        <where>
            <if test="name != null and name != ''">
                AND e.name LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="gender != null">
                AND e.gender = #{gender}
            </if>
            <if test="begin != null and begin != ''">
                AND e.entry_date &gt;= #{begin}
            </if>
            <if test="end != null and end != ''">
                AND e.entry_date &lt;= #{end}
            </if>
        </where>
    </select>

</mapper>
