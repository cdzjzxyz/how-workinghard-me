{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport axios from 'axios';\nimport dayjs from 'dayjs';\nimport { ElMessage } from 'element-plus';\nconst uploadUrl = 'http://localhost:8080/emps/upload';\nexport default {\n  __name: 'Profile',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const jobMap = {\n      1: '经理',\n      2: '总监',\n      3: '主管',\n      4: '组长',\n      5: '普通员工',\n      6: '其他'\n    };\n    const user = reactive({\n      username: '',\n      name: '',\n      gender: 1,\n      phone: '',\n      job: null,\n      salary: '',\n      image: '',\n      entryDate: '',\n      deptId: null,\n      updateTime: '',\n      exprList: []\n    });\n\n    // 上传相关\n    const uploadHeaders = {};\n    const handleUploadSuccess = async res => {\n      if (res.data.startsWith('/upload/')) {\n        user.image = `http://localhost:8080${res.data}`;\n      } else if (res.data.startsWith('http')) {\n        user.image = res.data;\n      } else {\n        user.image = `http://localhost:8080/upload/${res.data}`;\n      }\n      // 更新用户信息\n      await axios.put('/emps/profile', {\n        image: user.image\n      });\n      ElMessage.success('头像更新成功');\n    };\n    const beforeUpload = file => {\n      const isJPG = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/jpg';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPG) {\n        ElMessage.error('上传头像图片只能是 JPG/PNG/JPEG 格式!');\n        return false;\n      }\n      if (!isLt2M) {\n        ElMessage.error('上传头像图片大小不能超过 2MB!');\n        return false;\n      }\n      return true;\n    };\n    const fetchProfile = async () => {\n      const res = await axios.get('/emps/profile');\n      if (res.data.code === 1) {\n        Object.assign(user, res.data.data);\n      }\n    };\n    function formatDate(val) {\n      if (!val) return '';\n      if (Array.isArray(val)) {\n        return dayjs(new Date(val[0], val[1] - 1, val[2])).format('YYYY-MM-DD');\n      }\n      return dayjs(val).isValid() ? dayjs(val).format('YYYY-MM-DD') : val;\n    }\n    function formatDateTime(val) {\n      if (!val) return '';\n      if (Array.isArray(val)) {\n        return dayjs(new Date(val[0], val[1] - 1, val[2], val[3] || 0, val[4] || 0, val[5] || 0)).format('YYYY-MM-DD HH:mm:ss');\n      }\n      return dayjs(val).isValid() ? dayjs(val).format('YYYY-MM-DD HH:mm:ss') : val;\n    }\n    function formatEmpId(id) {\n      return id ? id.toString().padStart(9, '0') : '';\n    }\n    const showChangePwd = ref(false);\n    const pwdForm = ref({\n      oldPassword: '',\n      newPassword: '',\n      confirmPassword: ''\n    });\n    const changePassword = async () => {\n      if (pwdForm.value.newPassword !== pwdForm.value.confirmPassword) {\n        ElMessage.error('两次输入的新密码不一致');\n        return;\n      }\n      const res = await axios.post('/emps/change-password', pwdForm.value);\n      if (res.data.code === 1) {\n        ElMessage.success('密码修改成功');\n        showChangePwd.value = false;\n        pwdForm.value.oldPassword = '';\n        pwdForm.value.newPassword = '';\n        pwdForm.value.confirmPassword = '';\n      } else {\n        ElMessage.error(res.data.msg || '修改失败');\n      }\n    };\n    onMounted(async () => {\n      await fetchProfile();\n    });\n    const __returned__ = {\n      jobMap,\n      user,\n      uploadUrl,\n      uploadHeaders,\n      handleUploadSuccess,\n      beforeUpload,\n      fetchProfile,\n      formatDate,\n      formatDateTime,\n      formatEmpId,\n      showChangePwd,\n      pwdForm,\n      changePassword,\n      ref,\n      reactive,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get dayjs() {\n        return dayjs;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","axios","dayjs","ElMessage","uploadUrl","jobMap","user","username","name","gender","phone","job","salary","image","entryDate","deptId","updateTime","exprList","uploadHeaders","handleUploadSuccess","res","data","startsWith","put","success","beforeUpload","file","isJPG","type","isLt2M","size","error","fetchProfile","get","code","Object","assign","formatDate","val","Array","isArray","Date","format","isValid","formatDateTime","formatEmpId","id","toString","padStart","showChangePwd","pwdForm","oldPassword","newPassword","confirmPassword","changePassword","value","post","msg"],"sources":["D:/web_code/zxyf/test_vue/src/components/Profile.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\n<template>\n  <el-card>\n    <div style=\"display: flex;\">\n      <div>\n        <el-upload\n          class=\"avatar-uploader\"\n          :action=\"uploadUrl\"\n          :show-file-list=\"false\"\n          :on-success=\"handleUploadSuccess\"\n          :before-upload=\"beforeUpload\"\n          :headers=\"uploadHeaders\"\n          name=\"file\"\n        >\n          <el-avatar :src=\"user.image\" :size=\"120\" style=\"cursor: pointer;\" />\n          <div style=\"font-size: 12px; color: #888; margin-top: 8px; text-align: center;\">点击更换头像</div>\n        </el-upload>\n      </div>\n      <el-descriptions title=\"个人信息\" :column=\"2\" border style=\"margin-left: 32px;\">\n        <el-descriptions-item label=\"工号\">{{ formatEmpId(user.id) }}</el-descriptions-item>\n        <el-descriptions-item label=\"姓名\">{{ user.name }}</el-descriptions-item>\n        <el-descriptions-item label=\"性别\">{{ user.gender === 1 ? '男' : '女' }}</el-descriptions-item>\n        <el-descriptions-item label=\"手机号\">{{ user.phone }}</el-descriptions-item>\n        <el-descriptions-item label=\"所属部门\">{{ user.deptName }}</el-descriptions-item>\n        <el-descriptions-item label=\"职位\">{{ jobMap[user.job] || user.job }}</el-descriptions-item>\n        <el-descriptions-item label=\"薪资\">{{ user.salary }}</el-descriptions-item>\n        <el-descriptions-item label=\"入职时间\">{{ formatDate(user.entryDate) }}</el-descriptions-item>\n        <el-descriptions-item label=\"最后操作时间\">{{ formatDateTime(user.updateTime) }}</el-descriptions-item>\n        <el-descriptions-item label=\"工作经历\" :span=\"2\">\n          <div v-if=\"user.exprList && user.exprList.length\">\n            <el-timeline>\n              <el-timeline-item\n                v-for=\"expr in user.exprList\"\n                :key=\"expr.id\"\n                :timestamp=\"formatDate(expr.begin) + ' ~ ' + formatDate(expr.end)\"\n              >\n                <div>\n                  <b>{{ expr.company }}</b> - {{ expr.job }}\n                </div>\n              </el-timeline-item>\n            </el-timeline>\n          </div>\n          <div v-else>暂无工作经历</div>\n        </el-descriptions-item>\n      </el-descriptions>\n      <el-link type=\"primary\" @click=\"showChangePwd = true\" style=\"margin-top: 16px;\">忘记密码？</el-link>\n    </div>\n  </el-card>\n  <el-dialog title=\"修改密码\" v-model=\"showChangePwd\" width=\"500px\">\n    <el-form :model=\"pwdForm\" label-width=\"120px\">\n      <el-form-item label=\"原密码\">\n        <el-input v-model=\"pwdForm.oldPassword\" type=\"password\" />\n      </el-form-item>\n      <el-form-item label=\"新密码\">\n        <el-input v-model=\"pwdForm.newPassword\" type=\"password\" />\n      </el-form-item>\n      <el-form-item label=\"确认新密码\">\n        <el-input v-model=\"pwdForm.confirmPassword\" type=\"password\" />\n      </el-form-item>\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"changePassword\">修改密码</el-button>\n        <el-button @click=\"showChangePwd = false\">取消</el-button>\n      </el-form-item>\n    </el-form>\n  </el-dialog>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue'\nimport axios from 'axios'\nimport dayjs from 'dayjs'\nimport { ElMessage } from 'element-plus'\n\nconst jobMap = { 1: '经理', 2: '总监', 3: '主管', 4: '组长', 5: '普通员工', 6: '其他' }\n\nconst user = reactive({\n  username: '',\n  name: '',\n  gender: 1,\n  phone: '',\n  job: null,\n  salary: '',\n  image: '',\n  entryDate: '',\n  deptId: null,\n  updateTime: '',\n  exprList: []\n})\n\n// 上传相关\nconst uploadUrl = 'http://localhost:8080/emps/upload'\nconst uploadHeaders = {}\nconst handleUploadSuccess = async (res) => {\n  if (res.data.startsWith('/upload/')) {\n    user.image = `http://localhost:8080${res.data}`\n  } else if (res.data.startsWith('http')) {\n    user.image = res.data\n  } else {\n    user.image = `http://localhost:8080/upload/${res.data}`\n  }\n  // 更新用户信息\n  await axios.put('/emps/profile', { image: user.image })\n  ElMessage.success('头像更新成功')\n}\nconst beforeUpload = (file) => {\n  const isJPG = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/jpg'\n  const isLt2M = file.size / 1024 / 1024 < 2\n  if (!isJPG) {\n    ElMessage.error('上传头像图片只能是 JPG/PNG/JPEG 格式!')\n    return false\n  }\n  if (!isLt2M) {\n    ElMessage.error('上传头像图片大小不能超过 2MB!')\n    return false\n  }\n  return true\n}\n\nconst fetchProfile = async () => {\n  const res = await axios.get('/emps/profile')\n  if (res.data.code === 1) {\n    Object.assign(user, res.data.data)\n  }\n}\n\nfunction formatDate(val) {\n  if (!val) return ''\n  if (Array.isArray(val)) {\n    return dayjs(new Date(val[0], val[1] - 1, val[2])).format('YYYY-MM-DD')\n  }\n  return dayjs(val).isValid() ? dayjs(val).format('YYYY-MM-DD') : val\n}\nfunction formatDateTime(val) {\n  if (!val) return ''\n  if (Array.isArray(val)) {\n    return dayjs(new Date(val[0], val[1] - 1, val[2], val[3] || 0, val[4] || 0, val[5] || 0)).format('YYYY-MM-DD HH:mm:ss')\n  }\n  return dayjs(val).isValid() ? dayjs(val).format('YYYY-MM-DD HH:mm:ss') : val\n}\n\nfunction formatEmpId(id) {\n  return id ? id.toString().padStart(9, '0') : ''\n}\n\nconst showChangePwd = ref(false)\nconst pwdForm = ref({\n  oldPassword: '',\n  newPassword: '',\n  confirmPassword: ''\n})\n\nconst changePassword = async () => {\n  if (pwdForm.value.newPassword !== pwdForm.value.confirmPassword) {\n    ElMessage.error('两次输入的新密码不一致')\n    return\n  }\n  const res = await axios.post('/emps/change-password', pwdForm.value)\n  if (res.data.code === 1) {\n    ElMessage.success('密码修改成功')\n    showChangePwd.value = false\n    pwdForm.value.oldPassword = ''\n    pwdForm.value.newPassword = ''\n    pwdForm.value.confirmPassword = ''\n  } else {\n    ElMessage.error(res.data.msg || '修改失败')\n  }\n}\n\nonMounted(async () => {\n  await fetchProfile()\n})\n</script>\n\n<style scoped>\n.el-card {\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n  padding: 20px;\n}\n\n.avatar-uploader {\n  text-align: center;\n}\n\n.avatar-uploader .el-avatar {\n  border: 2px solid #fff;\n  box-shadow: 0 2px 12px 0 rgba(0,0,0,.1);\n  transition: all 0.3s;\n}\n\n.avatar-uploader .el-avatar:hover {\n  transform: scale(1.05);\n  box-shadow: 0 4px 16px 0 rgba(0,0,0,.2);\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}