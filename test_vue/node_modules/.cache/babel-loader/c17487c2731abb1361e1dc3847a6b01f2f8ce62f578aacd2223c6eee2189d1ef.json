{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"notification-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode($setup[\"ElCard\"], {\n    class: \"notification-card\"\n  }, {\n    header: _withCtx(() => _cache[0] || (_cache[0] = [_createElementVNode(\"div\", {\n      class: \"card-header\"\n    }, [_createElementVNode(\"span\", {\n      class: \"header-title\"\n    }, \"我的通知\"), _createElementVNode(\"div\", {\n      class: \"header-desc\"\n    }, \"查看您的所有站内通知\")], -1 /* HOISTED */)])),\n    default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock($setup[\"ElTable\"], {\n      data: $setup.notifications,\n      style: {\n        \"width\": \"100%\"\n      },\n      \"header-cell-style\": {\n        background: '#f5f7fa',\n        color: '#606266'\n      }\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"ElTableColumn\"], {\n        label: \"状态\",\n        width: \"80\"\n      }, {\n        default: _withCtx(scope => [!scope.row.isRead ? (_openBlock(), _createBlock($setup[\"ElTag\"], {\n          key: 0,\n          type: \"danger\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"未读\")])),\n          _: 1 /* STABLE */,\n          __: [1]\n        })) : (_openBlock(), _createBlock($setup[\"ElTag\"], {\n          key: 1,\n          type: \"info\",\n          size: \"small\"\n        }, {\n          default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"已读\")])),\n          _: 1 /* STABLE */,\n          __: [2]\n        }))]),\n        _: 1 /* STABLE */\n      }), _createVNode($setup[\"ElTableColumn\"], {\n        prop: \"content\",\n        label: \"通知内容\",\n        \"show-overflow-tooltip\": \"\"\n      }), _createVNode($setup[\"ElTableColumn\"], {\n        label: \"创建时间\",\n        width: \"180\"\n      }, {\n        default: _withCtx(scope => [_createTextVNode(_toDisplayString($setup.formatDate(scope.row.createTime)), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode($setup[\"ElTableColumn\"], {\n        label: \"操作\",\n        width: \"100\",\n        fixed: \"right\"\n      }, {\n        default: _withCtx(scope => [!scope.row.isRead ? (_openBlock(), _createBlock($setup[\"ElButton\"], {\n          key: 0,\n          type: \"primary\",\n          size: \"small\",\n          onClick: $event => $setup.markAsRead(scope.row.id)\n        }, {\n          default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"标记已读\")])),\n          _: 2 /* DYNAMIC */,\n          __: [3]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode($setup[\"ElButton\"], {\n          type: \"danger\",\n          size: \"small\",\n          onClick: $event => $setup.deleteNotification(scope.row.id)\n        }, {\n          default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"删除\")])),\n          _: 2 /* DYNAMIC */,\n          __: [4]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]]), !$setup.loading && $setup.notifications.length === 0 ? (_openBlock(), _createBlock($setup[\"ElEmpty\"], {\n      key: 0,\n      description: \"暂无通知\"\n    })) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","$setup","header","_withCtx","_cache","_createElementVNode","default","_createBlock","data","notifications","style","background","color","label","width","scope","row","isRead","key","type","size","_createTextVNode","_","__","prop","_toDisplayString","formatDate","createTime","fixed","onClick","$event","markAsRead","id","_createCommentVNode","deleteNotification","loading","length","description"],"sources":["D:\\web_code\\zxyf\\test_vue\\src\\components\\NotificationList.vue"],"sourcesContent":["<template>\r\n  <div class=\"notification-container\">\r\n    <el-card class=\"notification-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span class=\"header-title\">我的通知</span>\r\n          <div class=\"header-desc\">查看您的所有站内通知</div>\r\n        </div>\r\n      </template>\r\n\r\n      <el-table\r\n        :data=\"notifications\"\r\n        style=\"width: 100%\"\r\n        v-loading=\"loading\"\r\n        :header-cell-style=\"{ background: '#f5f7fa', color: '#606266' }\"\r\n      >\r\n        <el-table-column label=\"状态\" width=\"80\">\r\n          <template #default=\"scope\">\r\n            <el-tag v-if=\"!scope.row.isRead\" type=\"danger\" size=\"small\">未读</el-tag>\r\n            <el-tag v-else type=\"info\" size=\"small\">已读</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"content\" label=\"通知内容\" show-overflow-tooltip />\r\n        <el-table-column label=\"创建时间\" width=\"180\">\r\n           <template #default=\"scope\">\r\n             {{ formatDate(scope.row.createTime) }}\r\n           </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"100\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button\r\n              v-if=\"!scope.row.isRead\"\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              @click=\"markAsRead(scope.row.id)\"\r\n            >标记已读</el-button>\r\n             <el-button\r\n               type=\"danger\"\r\n               size=\"small\"\r\n               @click=\"deleteNotification(scope.row.id)\"\r\n             >删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n       <el-empty v-if=\"!loading && notifications.length === 0\" description=\"暂无通知\"></el-empty>\r\n\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport axios from 'axios'\r\nimport { ElMessage, ElCard, ElTable, ElTableColumn, ElTag, ElButton, ElEmpty } from 'element-plus'\r\nimport dayjs from 'dayjs'\r\n\r\nconst notifications = ref([])\r\nconst loading = ref(false)\r\n\r\nconst fetchNotifications = async () => {\r\n  loading.value = true\r\n  try {\r\n    const res = await axios.get('/notification/my', { headers: { token: localStorage.getItem('token') } })\r\n    if (res.data.code === 1) {\r\n      notifications.value = res.data.data\r\n    }\r\n  } catch (error) {\r\n     ElMessage.error('获取通知失败');\r\n     console.error(error);\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nconst markAsRead = async (id) => {\r\n   try {\r\n     const res = await axios.post(`/notification/markAsRead/${id}`, null, { headers: { token: localStorage.getItem('token') } })\r\n     if (res.data.code === 1) {\r\n       ElMessage.success('标记成功');\r\n       fetchNotifications(); // 刷新列表\r\n     } else {\r\n       ElMessage.error(res.data.msg || '标记失败');\r\n     }\r\n   } catch (error) {\r\n      ElMessage.error('操作失败');\r\n      console.error(error);\r\n   }\r\n}\r\n\r\nconst deleteNotification = async (id) => {\r\n    try {\r\n     const res = await axios.delete(`/notification/delete/${id}`, { headers: { token: localStorage.getItem('token') } })\r\n     if (res.data.code === 1) {\r\n       ElMessage.success('删除成功');\r\n       fetchNotifications(); // 刷新列表\r\n     } else {\r\n       ElMessage.error(res.data.msg || '删除失败');\r\n     }\r\n   } catch (error) {\r\n      ElMessage.error('操作失败');\r\n      console.error(error);\r\n   }\r\n}\r\n\r\nfunction formatDate(val) {\r\n  return dayjs(val).format('YYYY-MM-DD HH:mm:ss')\r\n}\r\n\r\nonMounted(fetchNotifications)\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.notification-container {\r\n  padding: 20px;\r\n  background-color: #f0f2f5; /* 轻微的背景色 */\r\n  min-height: calc(100vh - 64px - 40px); /* 减去header和padding的高度 */\r\n}\r\n\r\n.notification-card {\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.06);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.notification-card:hover {\r\n   transform: translateY(-2px);\r\n   box-shadow: 0 6px 24px rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n}\r\n\r\n.header-title {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.header-desc {\r\n  font-size: 13px;\r\n  color: #909399;\r\n}\r\n\r\n:deep(.el-table) {\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n:deep(.el-table th) {\r\n  background-color: #f5f7fa;\r\n  font-weight: bold;\r\n}\r\n\r\n.el-empty {\r\n    padding: 40px 0;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}