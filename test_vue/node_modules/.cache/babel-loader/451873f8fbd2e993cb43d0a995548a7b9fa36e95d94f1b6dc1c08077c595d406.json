{"ast":null,"code":"import { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nexport default {\n  __name: 'Register',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const form = ref({\n      username: '',\n      name: '',\n      password: ''\n    });\n    const rules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }],\n      name: [{\n        required: true,\n        message: '请输入姓名',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }]\n    };\n    const formRef = ref(null);\n    const onRegister = () => {\n      formRef.value.validate(async valid => {\n        if (!valid) return;\n        try {\n          const res = await axios.post('/register', form.value);\n          if (res.data.code === 1) {\n            ElMessage.success('注册成功，请登录');\n            router.push('/login');\n          } else {\n            ElMessage.error(res.data.msg || '注册失败');\n          }\n        } catch (e) {\n          ElMessage.error('注册失败，请稍后重试');\n        }\n      });\n    };\n    const onReset = () => {\n      form.value.username = '';\n      form.value.name = '';\n      form.value.password = '';\n    };\n    const goLogin = () => {\n      router.push('/login');\n    };\n    const __returned__ = {\n      router,\n      form,\n      rules,\n      formRef,\n      onRegister,\n      onReset,\n      goLogin,\n      ref,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","useRouter","ElMessage","axios","router","form","username","name","password","rules","required","message","trigger","formRef","onRegister","value","validate","valid","res","post","data","code","success","push","error","msg","e","onReset","goLogin"],"sources":["D:/web_code/zxyf/test_vue/src/components/Register.vue"],"sourcesContent":["<!-- eslint-disable vue/multi-word-component-names -->\r\n<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-left\">\r\n      <img src=\"@/assets/login-bg.png\" alt=\"illustration\" class=\"login-img\" />\r\n    </div>\r\n    <div class=\"login-right\">\r\n      <div class=\"login-box\">\r\n        <div class=\"login-title\">员工注册</div>\r\n        <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" class=\"login-form\">\r\n          <el-form-item label=\"用户名\" prop=\"username\" label-width=\"70px\">\r\n            <el-input v-model=\"form.username\" placeholder=\"请输入用户名\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"姓名\" prop=\"name\" label-width=\"70px\">\r\n            <el-input v-model=\"form.name\" placeholder=\"请输入姓名\" />\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" prop=\"password\" label-width=\"70px\">\r\n            <el-input v-model=\"form.password\" type=\"password\" placeholder=\"请输入密码\" show-password />\r\n          </el-form-item>\r\n          <el-form-item>\r\n            <el-button type=\"primary\" @click=\"onRegister\" style=\"width: 120px;\">注册</el-button>\r\n            <el-button style=\"width: 120px; margin-left: 20px;\" @click=\"onReset\">重置</el-button>\r\n            <el-button type=\"text\" @click=\"goLogin\" style=\"margin-left: 20px;\">已有账号？去登录</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport axios from 'axios'\r\n\r\nconst router = useRouter()\r\nconst form = ref({\r\n  username: '',\r\n  name: '',\r\n  password: ''\r\n})\r\nconst rules = {\r\n  username: [{ required: true, message: '请输入用户名', trigger: 'blur' }],\r\n  name: [{ required: true, message: '请输入姓名', trigger: 'blur' }],\r\n  password: [{ required: true, message: '请输入密码', trigger: 'blur' }]\r\n}\r\nconst formRef = ref(null)\r\n\r\nconst onRegister = () => {\r\n  formRef.value.validate(async (valid) => {\r\n    if (!valid) return\r\n    try {\r\n      const res = await axios.post('/register', form.value)\r\n      if (res.data.code === 1) {\r\n        ElMessage.success('注册成功，请登录')\r\n        router.push('/login')\r\n      } else {\r\n        ElMessage.error(res.data.msg || '注册失败')\r\n      }\r\n    } catch (e) {\r\n      ElMessage.error('注册失败，请稍后重试')\r\n    }\r\n  })\r\n}\r\n\r\nconst onReset = () => {\r\n  form.value.username = ''\r\n  form.value.name = ''\r\n  form.value.password = ''\r\n}\r\n\r\nconst goLogin = () => {\r\n  router.push('/login')\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  height: 100vh;\r\n  background: #fff;\r\n}\r\n.login-left {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.login-img {\r\n  width: 80%;\r\n  max-width: 600px;\r\n}\r\n.login-right {\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: #f3feff;\r\n}\r\n.login-box {\r\n  width: 480px;\r\n  background: #eafdff;\r\n  border-radius: 8px;\r\n  padding: 48px 40px 32px 40px;\r\n  box-shadow: 0 2px 16px 0 rgba(0,0,0,0.04);\r\n}\r\n.login-title {\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  margin-bottom: 32px;\r\n  font-family: 'FZShuTi', '微软雅黑', 'Arial';\r\n  color: #222;\r\n  letter-spacing: 2px;\r\n}\r\n.login-form {\r\n  margin-top: 16px;\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AA+BA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,cAAc;AACxC,OAAOC,KAAK,MAAM,OAAO;;;;;;;IAEzB,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;IAC1B,MAAMI,IAAI,GAAGL,GAAG,CAAC;MACfM,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE;IACZ,CAAC,CAAC;IACF,MAAMC,KAAK,GAAG;MACZH,QAAQ,EAAE,CAAC;QAAEI,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,CAAC;MAClEL,IAAI,EAAE,CAAC;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,CAAC;MAC7DJ,QAAQ,EAAE,CAAC;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC;IAClE,CAAC;IACD,MAAMC,OAAO,GAAGb,GAAG,CAAC,IAAI,CAAC;IAEzB,MAAMc,UAAU,GAAGA,CAAA,KAAM;MACvBD,OAAO,CAACE,KAAK,CAACC,QAAQ,CAAC,MAAOC,KAAK,IAAK;QACtC,IAAI,CAACA,KAAK,EAAE;QACZ,IAAI;UACF,MAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,WAAW,EAAEd,IAAI,CAACU,KAAK,CAAC;UACrD,IAAIG,GAAG,CAACE,IAAI,CAACC,IAAI,KAAK,CAAC,EAAE;YACvBnB,SAAS,CAACoB,OAAO,CAAC,UAAU,CAAC;YAC7BlB,MAAM,CAACmB,IAAI,CAAC,QAAQ,CAAC;UACvB,CAAC,MAAM;YACLrB,SAAS,CAACsB,KAAK,CAACN,GAAG,CAACE,IAAI,CAACK,GAAG,IAAI,MAAM,CAAC;UACzC;QACF,CAAC,CAAC,OAAOC,CAAC,EAAE;UACVxB,SAAS,CAACsB,KAAK,CAAC,YAAY,CAAC;QAC/B;MACF,CAAC,CAAC;IACJ,CAAC;IAED,MAAMG,OAAO,GAAGA,CAAA,KAAM;MACpBtB,IAAI,CAACU,KAAK,CAACT,QAAQ,GAAG,EAAE;MACxBD,IAAI,CAACU,KAAK,CAACR,IAAI,GAAG,EAAE;MACpBF,IAAI,CAACU,KAAK,CAACP,QAAQ,GAAG,EAAE;IAC1B,CAAC;IAED,MAAMoB,OAAO,GAAGA,CAAA,KAAM;MACpBxB,MAAM,CAACmB,IAAI,CAAC,QAAQ,CAAC;IACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}