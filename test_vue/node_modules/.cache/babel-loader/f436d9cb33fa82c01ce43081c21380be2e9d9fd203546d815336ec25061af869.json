{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport axios from 'axios';\nimport * as echarts from 'echarts';\nimport 'echarts/lib/component/calendar';\nimport 'echarts/lib/component/tooltip';\nimport AttendanceReport from './AttendanceReport.vue';\nimport catPoint from '@/assets/cat-point.jpg';\nexport default {\n  __name: 'Attendance',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const attendanceList = ref([]);\n    const todayRecord = ref(null);\n    const stats = ref({});\n    const month = ref(new Date().toISOString().slice(0, 7));\n    const calendarData = ref([]);\n    const calendarChart = ref(null);\n    const activeTab = ref('report');\n    const selectedEmpId = ref(null);\n    const getToday = async () => {\n      const {\n        data\n      } = await axios.get('/attendance/today');\n      todayRecord.value = data.data;\n    };\n    const getMyAttendance = async () => {\n      const {\n        data\n      } = await axios.get('/attendance/my');\n      attendanceList.value = data.data;\n    };\n    const getStats = async () => {\n      const {\n        data\n      } = await axios.get('/attendance/stats', {\n        params: {\n          month: month.value\n        }\n      });\n      stats.value = data.data;\n    };\n    const getCalendar = async () => {\n      const {\n        data\n      } = await axios.get('/attendance/calendar', {\n        params: {\n          month: month.value\n        }\n      });\n      calendarData.value = data.data;\n      renderCalendar();\n    };\n    const checkIn = async () => {\n      await axios.post('/attendance/checkin');\n      ElMessage.success('上班打卡成功');\n      getToday();\n      getMyAttendance();\n      getStats();\n      getCalendar();\n    };\n    const checkOut = async () => {\n      await axios.post('/attendance/checkout');\n      ElMessage.success('下班打卡成功');\n      getToday();\n      getMyAttendance();\n      getStats();\n      getCalendar();\n    };\n    const statusColor = status => {\n      switch (status) {\n        case 1:\n          return '#67C23A';\n        // 正常\n        case 2:\n          return '#E6A23C';\n        // 迟到\n        case 3:\n          return '#F56C6C';\n        // 早退\n        case 4:\n          return '#909399';\n        // 缺卡\n        case 5:\n          return '#409EFF';\n        // 请假\n        default:\n          return '#dcdfe6';\n      }\n    };\n    const statusText = status => {\n      switch (status) {\n        case 1:\n          return '正常';\n        case 2:\n          return '迟到';\n        case 3:\n          return '早退';\n        case 4:\n          return '缺卡';\n        case 5:\n          return '请假';\n        default:\n          return '未知';\n      }\n    };\n    const statusClass = status => {\n      switch (status) {\n        case 1:\n          return 'attendance-status-normal';\n        case 2:\n          return 'attendance-status-late';\n        case 3:\n          return 'attendance-status-early';\n        case 4:\n          return 'attendance-status-absent';\n        case 5:\n          return 'attendance-status-leave';\n        default:\n          return '';\n      }\n    };\n    const renderCalendar = () => {\n      if (!calendarChart.value) return;\n      const chart = echarts.init(calendarChart.value);\n      const statusMap = {\n        1: {\n          name: '正常',\n          color: '#67C23A'\n        },\n        2: {\n          name: '迟到',\n          color: '#E6A23C'\n        },\n        3: {\n          name: '早退',\n          color: '#F56C6C'\n        },\n        4: {\n          name: '缺卡',\n          color: '#909399'\n        },\n        5: {\n          name: '请假',\n          color: '#409EFF'\n        },\n        default: {\n          name: '未知',\n          color: '#dcdfe6'\n        } // 为未知状态添加默认值\n      };\n\n      // 准备图例数据\n      const legendData = Object.values(statusMap).filter(status => status.name !== '未知') // 可选：不显示“未知”在图例中\n      .map(status => status.name);\n\n      // 为每种状态生成一个series\n      const seriesData = legendData.map(statusName => {\n        // 找到 statusMap 中 name 对应的 key (即状态码)\n        const statusEntry = Object.entries(statusMap).find(([key, value]) => value.name === statusName);\n        const statusCode = statusEntry ? parseInt(statusEntry[0]) : null; // 将key转回数字\n        const seriesColor = statusEntry ? statusEntry[1].color : statusMap.default.color;\n        return {\n          name: statusName,\n          // 系列名称，与图例对应\n          type: 'scatter',\n          coordinateSystem: 'calendar',\n          symbolSize: 22,\n          data: calendarData.value.filter(item => item.status === statusCode) // 筛选出当前状态的数据\n          .map(item => [item.date, item.status]),\n          // value只需要日期和状态值(或特定值用于tooltip)\n          // ECharts 会自动在日历上找到对应日期\n          itemStyle: {\n            color: seriesColor,\n            // 为整个系列设置颜色\n            shadowBlur: 8,\n            shadowColor: 'rgba(64,158,255,0.2)'\n          },\n          label: {\n            // 标签配置可以移到这里，如果希望每个系列有不同的标签逻辑\n            show: true,\n            formatter: params => new Date(params.value[0]).getDate(),\n            color: '#fff',\n            fontWeight: 'bold'\n          }\n        };\n      });\n      chart.setOption({\n        tooltip: {\n          backgroundColor: '#fff',\n          borderColor: '#409EFF',\n          textStyle: {\n            color: '#333'\n          },\n          formatter: params => {\n            // params.value 通常是 [日期, status数字]\n            // params.seriesName 就是图例中的状态名称，如 '正常', '迟到'\n            const dateStr = params.value[0];\n            const statusName = params.seriesName; // 直接从 seriesName 获取状态文本\n            return `<b>${dateStr}</b><br/>${statusName}`;\n          }\n        },\n        calendar: {\n          top: 60,\n          left: 30,\n          right: 30,\n          cellSize: [38, 38],\n          //可以根据需要调整或设为'auto'\n          range: month.value,\n          dayLabel: {\n            nameMap: 'cn',\n            color: '#409EFF',\n            fontWeight: 'bold'\n          },\n          monthLabel: {\n            nameMap: 'cn',\n            color: '#303133',\n            fontSize: 18\n          },\n          itemStyle: {\n            borderRadius: 8,\n            borderWidth: 1,\n            borderColor: '#ebeef5'\n          },\n          splitLine: {\n            show: true,\n            lineStyle: {\n              color: '#ebeef5'\n            }\n          }\n        },\n        legend: {\n          data: legendData,\n          // 使用从statusMap生成的图例数据\n          bottom: 10,\n          left: 'center',\n          itemWidth: 16,\n          itemHeight: 16\n        },\n        series: seriesData // 使用新生成的多个系列\n      });\n    };\n    onMounted(() => {\n      getToday();\n      getMyAttendance();\n      getStats();\n      getCalendar();\n    });\n    watch(month, () => {\n      getStats();\n      getCalendar();\n    });\n    const __returned__ = {\n      attendanceList,\n      todayRecord,\n      stats,\n      month,\n      calendarData,\n      calendarChart,\n      activeTab,\n      selectedEmpId,\n      getToday,\n      getMyAttendance,\n      getStats,\n      getCalendar,\n      checkIn,\n      checkOut,\n      statusColor,\n      statusText,\n      statusClass,\n      renderCalendar,\n      ref,\n      onMounted,\n      watch,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get axios() {\n        return axios;\n      },\n      get echarts() {\n        return echarts;\n      },\n      AttendanceReport,\n      get catPoint() {\n        return catPoint;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","ElMessage","axios","echarts","AttendanceReport","catPoint","attendanceList","todayRecord","stats","month","Date","toISOString","slice","calendarData","calendarChart","activeTab","selectedEmpId","getToday","data","get","value","getMyAttendance","getStats","params","getCalendar","renderCalendar","checkIn","post","success","checkOut","statusColor","status","statusText","statusClass","chart","init","statusMap","name","color","default","legendData","Object","values","filter","map","seriesData","statusName","statusEntry","entries","find","key","statusCode","parseInt","seriesColor","type","coordinateSystem","symbolSize","item","date","itemStyle","shadowBlur","shadowColor","label","show","formatter","getDate","fontWeight","setOption","tooltip","backgroundColor","borderColor","textStyle","dateStr","seriesName","calendar","top","left","right","cellSize","range","dayLabel","nameMap","monthLabel","fontSize","borderRadius","borderWidth","splitLine","lineStyle","legend","bottom","itemWidth","itemHeight","series"],"sources":["D:/web_code/zxyf/test_vue/src/components/Attendance.vue"],"sourcesContent":["<template>\n  <div class=\"attendance-container\">\n    <div>\n      <el-card>\n        <div class=\"attendance-flex-row\">\n          <div>\n            <template v-if=\"todayRecord\">\n              <div class=\"attendance-today-title\">今日考勤</div>\n              <div>\n                <span class=\"attendance-today-label\">上班打卡：</span>\n                <span class=\"attendance-today-value\">{{ todayRecord.checkInTime }}</span>\n              </div>\n              <div>\n                <span class=\"attendance-today-label\">下班打卡：</span>\n                <span class=\"attendance-today-value\">{{ todayRecord.checkOutTime }}</span>\n              </div>\n              <div>\n                <span class=\"attendance-today-label\">状态：</span>\n                <span :class=\"statusClass(todayRecord.status)\">{{ statusText(todayRecord.status) }}</span>\n              </div>\n            </template>\n            <template v-else>\n              <div style=\"color: #909399;\">您今天还未上班打卡哦</div>\n            </template>\n            <div style=\"margin-top: 20px;\">\n              <el-button type=\"primary\" @click=\"checkIn\" :disabled=\"!!(todayRecord && todayRecord.checkInTime)\">上班打卡</el-button>\n              <el-button type=\"success\" @click=\"checkOut\" :disabled=\"!!(!todayRecord || todayRecord.checkOutTime)\">下班打卡</el-button>\n            </div>\n          </div>\n          <img :src=\"catPoint\" alt=\"指猫\" class=\"cat-point-img-right\" />\n        </div>\n      </el-card>\n      <el-card>\n        <div ref=\"calendarChart\" style=\"width: 100%; height: 400px;\"></div>\n      </el-card>\n      <el-card style=\"margin-top: 20px;\">\n        <el-date-picker v-model=\"month\" type=\"month\" value-format=\"YYYY-MM\" style=\"margin-bottom: 10px;\" @change=\"getStats\"/>\n        <el-row :gutter=\"20\">\n          <el-col :span=\"4\">\n            <div class=\"stat-block attend\"><i class=\"el-icon-success\"></i> 出勤：{{ stats.attend }}</div>\n          </el-col>\n          <el-col :span=\"4\">\n            <div class=\"stat-block late\"><i class=\"el-icon-time\"></i> 迟到：{{ stats.late }}</div>\n          </el-col>\n          <el-col :span=\"4\">\n            <div class=\"stat-block early\"><i class=\"el-icon-warning\"></i> 早退：{{ stats.early }}</div>\n          </el-col>\n          <el-col :span=\"4\">\n            <div class=\"stat-block absent\"><i class=\"el-icon-close\"></i> 缺卡：{{ stats.absent }}</div>\n          </el-col>\n          <el-col :span=\"4\">\n            <div class=\"stat-block leave\"><i class=\"el-icon-date\"></i> 请假：{{ stats.leave }}</div>\n          </el-col>\n        </el-row>\n      </el-card>\n    </div>\n    <el-card>\n      <el-tabs v-model=\"activeTab\">\n        <el-tab-pane label=\"考勤报表\" name=\"report\">\n          <attendance-report :emp-id=\"selectedEmpId\" />\n        </el-tab-pane>\n      </el-tabs>\n    </el-card>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted, watch } from 'vue'\nimport { ElMessage } from 'element-plus'\nimport axios from 'axios'\nimport * as echarts from 'echarts'\nimport 'echarts/lib/component/calendar'\nimport 'echarts/lib/component/tooltip'\nimport AttendanceReport from './AttendanceReport.vue'\nimport catPoint from '@/assets/cat-point.jpg'\n\nconst attendanceList = ref([])\nconst todayRecord = ref(null)\nconst stats = ref({})\nconst month = ref(new Date().toISOString().slice(0, 7))\nconst calendarData = ref([])\nconst calendarChart = ref(null)\nconst activeTab = ref('report')\nconst selectedEmpId = ref(null)\n\nconst getToday = async () => {\n  const { data } = await axios.get('/attendance/today')\n  todayRecord.value = data.data\n}\nconst getMyAttendance = async () => {\n  const { data } = await axios.get('/attendance/my')\n  attendanceList.value = data.data\n}\nconst getStats = async () => {\n  const { data } = await axios.get('/attendance/stats', { params: { month: month.value } })\n  stats.value = data.data\n}\nconst getCalendar = async () => {\n  const { data } = await axios.get('/attendance/calendar', { params: { month: month.value } })\n  calendarData.value = data.data\n  renderCalendar()\n}\nconst checkIn = async () => {\n  await axios.post('/attendance/checkin')\n  ElMessage.success('上班打卡成功')\n  getToday()\n  getMyAttendance()\n  getStats()\n  getCalendar()\n}\nconst checkOut = async () => {\n  await axios.post('/attendance/checkout')\n  ElMessage.success('下班打卡成功')\n  getToday()\n  getMyAttendance()\n  getStats()\n  getCalendar()\n}\n\nconst statusColor = (status) => {\n  switch (status) {\n    case 1: return '#67C23A'; // 正常\n    case 2: return '#E6A23C'; // 迟到\n    case 3: return '#F56C6C'; // 早退\n    case 4: return '#909399'; // 缺卡\n    case 5: return '#409EFF'; // 请假\n    default: return '#dcdfe6';\n  }\n}\nconst statusText = (status) => {\n  switch (status) {\n    case 1: return '正常';\n    case 2: return '迟到';\n    case 3: return '早退';\n    case 4: return '缺卡';\n    case 5: return '请假';\n    default: return '未知';\n  }\n}\n\nconst statusClass = (status) => {\n  switch (status) {\n    case 1: return 'attendance-status-normal'\n    case 2: return 'attendance-status-late'\n    case 3: return 'attendance-status-early'\n    case 4: return 'attendance-status-absent'\n    case 5: return 'attendance-status-leave'\n    default: return ''\n  }\n}\n\nconst renderCalendar = () => {\n  if (!calendarChart.value) return;\n  const chart = echarts.init(calendarChart.value);\n\n  const statusMap = {\n    1: { name: '正常', color: '#67C23A' },\n    2: { name: '迟到', color: '#E6A23C' },\n    3: { name: '早退', color: '#F56C6C' },\n    4: { name: '缺卡', color: '#909399' },\n    5: { name: '请假', color: '#409EFF' },\n    default: { name: '未知', color: '#dcdfe6'} // 为未知状态添加默认值\n  };\n\n  // 准备图例数据\n  const legendData = Object.values(statusMap)\n                          .filter(status => status.name !== '未知') // 可选：不显示“未知”在图例中\n                          .map(status => status.name);\n\n  // 为每种状态生成一个series\n  const seriesData = legendData.map(statusName => {\n    // 找到 statusMap 中 name 对应的 key (即状态码)\n    const statusEntry = Object.entries(statusMap).find(([key, value]) => value.name === statusName);\n    const statusCode = statusEntry ? parseInt(statusEntry[0]) : null; // 将key转回数字\n    const seriesColor = statusEntry ? statusEntry[1].color : statusMap.default.color;\n\n    return {\n      name: statusName, // 系列名称，与图例对应\n      type: 'scatter',\n      coordinateSystem: 'calendar',\n      symbolSize: 22,\n      data: calendarData.value\n        .filter(item => item.status === statusCode) // 筛选出当前状态的数据\n        .map(item => [item.date, item.status]), // value只需要日期和状态值(或特定值用于tooltip)\n                                                // ECharts 会自动在日历上找到对应日期\n      itemStyle: {\n        color: seriesColor, // 为整个系列设置颜色\n        shadowBlur: 8,\n        shadowColor: 'rgba(64,158,255,0.2)'\n      },\n      label: { // 标签配置可以移到这里，如果希望每个系列有不同的标签逻辑\n        show: true,\n        formatter: params => new Date(params.value[0]).getDate(),\n        color: '#fff',\n        fontWeight: 'bold'\n      },\n    };\n  });\n\n  chart.setOption({\n    tooltip: {\n      backgroundColor: '#fff',\n      borderColor: '#409EFF',\n      textStyle: { color: '#333' },\n      formatter: params => {\n        // params.value 通常是 [日期, status数字]\n        // params.seriesName 就是图例中的状态名称，如 '正常', '迟到'\n        const dateStr = params.value[0];\n        const statusName = params.seriesName; // 直接从 seriesName 获取状态文本\n        return `<b>${dateStr}</b><br/>${statusName}`;\n      }\n    },\n    calendar: {\n      top: 60,\n      left: 30,\n      right: 30,\n      cellSize: [38, 38], //可以根据需要调整或设为'auto'\n      range: month.value,\n      dayLabel: { nameMap: 'cn', color: '#409EFF', fontWeight: 'bold' },\n      monthLabel: { nameMap: 'cn', color: '#303133', fontSize: 18 },\n      itemStyle: { borderRadius: 8, borderWidth: 1, borderColor: '#ebeef5' },\n      splitLine: { show: true, lineStyle: { color: '#ebeef5' } }\n    },\n    legend: {\n      data: legendData, // 使用从statusMap生成的图例数据\n      bottom: 10,\n      left: 'center',\n      itemWidth: 16,\n      itemHeight: 16\n    },\n    series: seriesData // 使用新生成的多个系列\n  });\n};\nonMounted(() => {\n  getToday()\n  getMyAttendance()\n  getStats()\n  getCalendar()\n})\nwatch(month, () => {\n  getStats()\n  getCalendar()\n})\n</script>\n\n<style scoped>\n.attendance-container {\n  padding: 12px 4px 4px 4px;\n  background: linear-gradient(135deg, #f7faff 60%, #e0eafc 100%);\n  min-height: 100vh;\n  font-family: 'Source Han Sans SC', '微软雅黑', 'Arial', sans-serif;\n  font-size: 15px;\n}\n.el-card {\n  border-radius: 10px !important;\n  box-shadow: 0 2px 8px rgba(64,158,255,0.05) !important;\n  border: none !important;\n  margin-bottom: 14px;\n  padding: 10px 18px 10px 18px;\n}\n.section-title {\n  font-size: 20px;\n  font-weight: bold;\n  color: #409EFF;\n  margin-bottom: 12px;\n  letter-spacing: 1px;\n  display: flex;\n  align-items: center;\n}\n.stat-block {\n  background: linear-gradient(135deg, #e0eafc 60%, #cfdef3 100%);\n  border-radius: 8px;\n  padding: 10px 0;\n  font-size: 15px;\n  text-align: center;\n  margin-bottom: 6px;\n  color: #409EFF;\n  font-weight: bold;\n  box-shadow: 0 1px 4px rgba(64,158,255,0.05);\n}\n.stat-block.attend {\n  background: linear-gradient(135deg, #e8f8ef 60%, #d2f4e5 100%);\n  color: #219150; /* 深绿色 */\n  text-shadow: 0 1px 2px #b6e2c6;\n}\n.stat-block.late {\n  background: linear-gradient(135deg, #fff6e5 60%, #ffe6c7 100%);\n  color: #b26a00; /* 深橙色 */\n  text-shadow: 0 1px 2px #ffe6c7;\n}\n.stat-block.early {\n  background: linear-gradient(135deg, #ffeaea 60%, #ffd6d6 100%);\n  color: #c0392b; /* 深红色 */\n  text-shadow: 0 1px 2px #ffd6d6;\n}\n.stat-block.absent {\n  background: linear-gradient(135deg, #f4f4f5 60%, #e0e0e0 100%);\n  color: #606266; /* 深灰色 */\n  text-shadow: 0 1px 2px #e0e0e0;\n}\n.stat-block.leave {\n  background: linear-gradient(135deg, #e6f4ff 60%, #c7e6ff 100%);\n  color: #1765ad; /* 深蓝色 */\n  text-shadow: 0 1px 2px #c7e6ff;\n}\n.el-button {\n  border-radius: 16px !important;\n  font-size: 14px;\n  padding: 6px 18px;\n  font-weight: bold;\n  letter-spacing: 1px;\n}\n.el-date-picker {\n  border-radius: 6px;\n  font-size: 14px;\n  height: 32px;\n}\n.attendance-today-title {\n  font-size: 17px;\n  font-weight: bold;\n  color: #409EFF;\n  margin-bottom: 6px;\n}\n.attendance-today-label {\n  color: #303133;\n  font-weight: bold;\n  margin-right: 2px;\n  font-size: 14px;\n}\n.attendance-today-value {\n  color: #222;\n  font-weight: normal;\n  font-size: 14px;\n}\n.attendance-status-normal {\n  color: #219150;\n  font-weight: bold;\n}\n.attendance-status-late {\n  color: #b26a00;\n  font-weight: bold;\n}\n.attendance-status-early {\n  color: #c0392b;\n  font-weight: bold;\n}\n.attendance-status-absent {\n  color: #606266;\n  font-weight: bold;\n}\n.attendance-status-leave {\n  color: #1765ad;\n  font-weight: bold;\n}\n[ref=\"calendarChart\"] {\n  height: 320px !important;\n  min-height: 320px !important;\n  max-height: 340px !important;\n}\n.attendance-flex-row {\n  display: flex;\n  align-items: flex-start;\n}\n\n.cat-point-img-right {\n  height: 80px;\n  margin-left: 10px;\n  margin-top: 10px;\n  user-select: none;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}