{"ast":null,"code":"import { ref, onMounted, computed } from 'vue';\nimport * as echarts from 'echarts';\nimport axios from 'axios';\nimport dayjs from 'dayjs';\nimport { useRouter } from 'vue-router';\nimport { analyzeAttendance } from '@/api/ai';\n\n// 函数：生成随机浅色或柔和的渐变色\n\nexport default {\n  __name: 'Home',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    function getRandomSoftGradient() {\n      const hue = Math.random() * 360; // 0-360色相\n      const s1 = Math.random() * 30 + 70; // 70-100饱和度\n      const l1 = Math.random() * 10 + 90; // 90-100亮度 (非常浅)\n      const s2 = Math.random() * 30 + 60; // 60-90饱和度\n      const l2 = Math.random() * 10 + 85; // 85-95亮度 (稍深一点)\n\n      const color1 = `hsl(${hue}, ${s1}%, ${l1}%)`;\n      const color2 = `hsl(${(hue + 60) % 360}, ${s2}%, ${l2}%)`; // 稍微不同的色相\n      const angle = Math.random() * 360;\n      return `linear-gradient(${angle}deg, ${color1}, ${color2})`;\n    }\n\n    // 为不同的卡片定义背景 ref\n    const welcomeCardBackground = ref(getRandomSoftGradient());\n    const avatarCardBackground = ref(getRandomSoftGradient());\n    const statCardBackground = ref(getRandomSoftGradient());\n    const chartCardBackground = ref(getRandomSoftGradient());\n    const latestEmpCardBackground = ref(getRandomSoftGradient());\n    const announcementCardBackground = ref(getRandomSoftGradient());\n    const aiCardBackground = ref(getRandomSoftGradient());\n    const router = useRouter();\n    const stats = ref({\n      empCount: 0,\n      deptCount: 0,\n      maleCount: 0,\n      femaleCount: 0\n    });\n    const latestEmps = ref([]);\n    const deptCounts = ref([]);\n    const genderRatio = ref([]);\n    const deptChart = ref(null);\n    const genderChart = ref(null);\n    const userInfo = ref({\n      name: '',\n      avatar: '',\n      job: ''\n    });\n    const positionMap = {\n      1: '经理',\n      2: '总监',\n      3: '主管',\n      4: '组长',\n      5: '普通员工',\n      6: '其他'\n    };\n    const statItems = computed(() => [{\n      label: '员工总数',\n      value: stats.value.empCount,\n      icon: 'el-icon-user',\n      color1: '#409EFF',\n      color2: '#53a8ff'\n    }, {\n      label: '部门数',\n      value: stats.value.deptCount,\n      icon: 'el-icon-office-building',\n      color1: '#67C23A',\n      color2: '#95d475'\n    }, {\n      label: '男员工',\n      value: stats.value.maleCount,\n      icon: 'el-icon-male',\n      color1: '#36D1C4',\n      color2: '#5B86E5'\n    }, {\n      label: '女员工',\n      value: stats.value.femaleCount,\n      icon: 'el-icon-female',\n      color1: '#F56C6C',\n      color2: '#fbbd61'\n    }]);\n    const aiInput = ref('');\n    const aiAnswer = ref('');\n    const aiLoading = ref(false);\n    const latestAnnouncement = ref(null);\n    const fetchLatestAnnouncement = async () => {\n      try {\n        const res = await axios.get('/announcement/latest');\n        if (res.data.code === 1 && res.data.data) {\n          latestAnnouncement.value = res.data.data;\n        } else {\n          latestAnnouncement.value = null;\n        }\n      } catch (error) {\n        console.error('获取最新公告失败:', error);\n        latestAnnouncement.value = null;\n      }\n    };\n    const handleAskAI = async () => {\n      if (!aiInput.value.trim()) return;\n      aiLoading.value = true;\n      aiAnswer.value = '';\n      try {\n        const res = await analyzeAttendance(aiInput.value);\n        aiAnswer.value = res.data;\n      } catch (e) {\n        aiAnswer.value = 'AI分析失败，请稍后重试。';\n      } finally {\n        aiLoading.value = false;\n      }\n    };\n    function formatDate(val) {\n      if (!val) return '';\n      return dayjs(val).isValid() ? dayjs(val).format('YYYY-MM-DD') : val;\n    }\n    function formatEmpId(id) {\n      return id ? id.toString().padStart(9, '0') : '';\n    }\n    function renderDeptChart() {\n      const myChart = echarts.init(deptChart.value);\n      myChart.setOption({\n        title: {\n          text: '各部门人数分布',\n          left: 'center',\n          textStyle: {\n            color: '#409EFF',\n            fontSize: 18\n          }\n        },\n        tooltip: {},\n        xAxis: {\n          type: 'category',\n          data: deptCounts.value.map(item => item.deptName)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: deptCounts.value.map(item => item.count),\n          type: 'bar',\n          barWidth: '50%',\n          itemStyle: {\n            color: '#409EFF'\n          }\n        }]\n      });\n    }\n    function renderGenderChart() {\n      const myChart = echarts.init(genderChart.value);\n      myChart.setOption({\n        title: {\n          text: '男女比例',\n          left: 'center',\n          textStyle: {\n            color: '#409EFF',\n            fontSize: 18\n          }\n        },\n        tooltip: {\n          trigger: 'item'\n        },\n        legend: {\n          bottom: 10,\n          left: 'center'\n        },\n        series: [{\n          name: '性别',\n          type: 'pie',\n          radius: '50%',\n          data: genderRatio.value,\n          label: {\n            formatter: '{b}: {c} ({d}%)'\n          }\n        }]\n      });\n    }\n    const goToAddEmp = () => router.push('/emp');\n    const goToDept = () => router.push('/dept');\n    const goToAttendance = () => router.push('/attendance');\n    const goToProfile = () => router.push('/profile');\n    const goToLeave = () => router.push('/leave');\n    onMounted(async () => {\n      const userRes = await axios.get('/emps/profile');\n      if (userRes.data.code === 1) {\n        userInfo.value = {\n          name: userRes.data.data.name,\n          avatar: userRes.data.data.image,\n          job: userRes.data.data.job\n        };\n      }\n      const res = await axios.get('/emps/stats');\n      if (res.data.code === 1) {\n        stats.value.empCount = res.data.data.empCount;\n        stats.value.deptCount = res.data.data.deptCount;\n        stats.value.maleCount = res.data.data.maleCount;\n        stats.value.femaleCount = res.data.data.femaleCount;\n        latestEmps.value = res.data.data.latestEmps;\n        deptCounts.value = res.data.data.deptCounts;\n        genderRatio.value = [{\n          value: res.data.data.maleCount,\n          name: '男'\n        }, {\n          value: res.data.data.femaleCount,\n          name: '女'\n        }];\n        // 渲染图表\n        renderDeptChart();\n        renderGenderChart();\n      }\n      fetchLatestAnnouncement();\n    });\n    const __returned__ = {\n      getRandomSoftGradient,\n      welcomeCardBackground,\n      avatarCardBackground,\n      statCardBackground,\n      chartCardBackground,\n      latestEmpCardBackground,\n      announcementCardBackground,\n      aiCardBackground,\n      router,\n      stats,\n      latestEmps,\n      deptCounts,\n      genderRatio,\n      deptChart,\n      genderChart,\n      userInfo,\n      positionMap,\n      statItems,\n      aiInput,\n      aiAnswer,\n      aiLoading,\n      latestAnnouncement,\n      fetchLatestAnnouncement,\n      handleAskAI,\n      formatDate,\n      formatEmpId,\n      renderDeptChart,\n      renderGenderChart,\n      goToAddEmp,\n      goToDept,\n      goToAttendance,\n      goToProfile,\n      goToLeave,\n      ref,\n      onMounted,\n      computed,\n      get echarts() {\n        return echarts;\n      },\n      get axios() {\n        return axios;\n      },\n      get dayjs() {\n        return dayjs;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get analyzeAttendance() {\n        return analyzeAttendance;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","echarts","axios","dayjs","useRouter","analyzeAttendance","getRandomSoftGradient","hue","Math","random","s1","l1","s2","l2","color1","color2","angle","welcomeCardBackground","avatarCardBackground","statCardBackground","chartCardBackground","latestEmpCardBackground","announcementCardBackground","aiCardBackground","router","stats","empCount","deptCount","maleCount","femaleCount","latestEmps","deptCounts","genderRatio","deptChart","genderChart","userInfo","name","avatar","job","positionMap","statItems","label","value","icon","aiInput","aiAnswer","aiLoading","latestAnnouncement","fetchLatestAnnouncement","res","get","data","code","error","console","handleAskAI","trim","e","formatDate","val","isValid","format","formatEmpId","id","toString","padStart","renderDeptChart","myChart","init","setOption","title","text","left","textStyle","color","fontSize","tooltip","xAxis","type","map","item","deptName","yAxis","series","count","barWidth","itemStyle","renderGenderChart","trigger","legend","bottom","radius","formatter","goToAddEmp","push","goToDept","goToAttendance","goToProfile","goToLeave","userRes","image"],"sources":["D:/web_code/zxyf/test_vue/src/components/Home.vue"],"sourcesContent":["/* eslint-disable */\n<template>\n  <div class=\"home-container\">\n    <el-row :gutter=\"20\" style=\"margin-bottom: 20px;\">\n      <el-col :span=\"16\">\n        <el-card class=\"welcome-card\" :style=\"{ background: welcomeCardBackground }\">\n          <h2>欢迎来到员工管理系统</h2>\n          <p>本系统支持员工信息管理、部门管理、考勤统计、个人中心等功能。</p>\n        </el-card>\n      </el-col>\n      <el-col :span=\"8\">\n        <el-card class=\"avatar-card\" :style=\"{ background: avatarCardBackground }\">\n          <div style=\"text-align:center;\">\n            <el-avatar :size=\"80\" :src=\"userInfo.avatar || '默认头像地址'\" />\n            <div style=\"margin-top:10px;font-size:20px;font-weight:bold;\">{{ userInfo.name }}</div>\n            <div style=\"color: #888;\">{{ positionMap[userInfo.job] }}</div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"20\" style=\"margin-bottom: 20px;\">\n      <el-col :span=\"6\" v-for=\"item in statItems\" :key=\"item.label\">\n        <el-card :style=\"{ background: item.color1 ? `linear-gradient(135deg,${item.color1},${item.color2})` : statCardBackground }\">\n          <div style=\"display:flex;align-items:center;\">\n            <i :class=\"item.icon\" style=\"font-size:36px;margin-right:16px;\"></i>\n            <div>\n              <div style=\"font-size:16px;\">{{ item.label }}</div>\n              <div style=\"font-size:32px;font-weight:bold;\">{{ item.value }}</div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"20\" style=\"margin-bottom: 20px;\">\n      <el-col :span=\"12\">\n        <el-card :style=\"{ background: chartCardBackground }\">\n          <div ref=\"deptChart\" class=\"dept-chart\"></div>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card :style=\"{ background: chartCardBackground }\">\n          <div ref=\"genderChart\" class=\"gender-chart\"></div>\n        </el-card>\n      </el-col>\n    </el-row>\n    <el-row :gutter=\"20\">\n      <el-col :span=\"12\">\n        <el-card :style=\"{ background: latestEmpCardBackground }\">\n          <div style=\"font-weight:bold;\">最新入职员工</div>\n          <ul>\n            <li v-for=\"emp in latestEmps.slice(0, 2)\" :key=\"emp.id\" style=\"display:flex;align-items:center;margin-bottom:8px;\">\n              <el-avatar :src=\"emp.image\" :size=\"32\" style=\"margin-right:8px;\" />\n              <span>{{ emp.name }}（{{ emp.deptName }}，{{ formatDate(emp.entryDate) }}）</span>\n            </li>\n          </ul>\n          <el-divider />\n          <el-button type=\"primary\" @click=\"goToAddEmp\">新增员工</el-button>\n          <el-button @click=\"goToDept\" style=\"margin-left:8px;\">部门管理</el-button>\n        </el-card>\n      </el-col>\n      <el-col :span=\"12\">\n        <el-card :style=\"{ background: announcementCardBackground }\">\n          <div style=\"font-weight:bold;\">公告栏</div>\n          <div v-if=\"latestAnnouncement\" style=\"margin: 10px 0 16px 0; color: #666;\">\n            <h4 style=\"margin: 0 0 8px 0; color: #333;\">{{ latestAnnouncement.title }}</h4>\n            <p style=\"margin: 0; white-space: pre-line;\">{{ latestAnnouncement.content }}</p>\n            <div style=\"font-size: 12px; color: #888; text-align: right; margin-top: 8px;\">\n              发布时间: {{ formatDate(latestAnnouncement.createTime) }}\n            </div>\n          </div>\n          <div v-else style=\"margin: 10px 0 16px 0; color: #888;\">暂无公告。</div>\n          <el-divider />\n          <div style=\"font-weight:bold; margin-bottom: 8px;\">快捷操作</div>\n          <el-button type=\"primary\" size=\"small\" @click=\"goToAttendance\">考勤打卡</el-button>\n          <el-button size=\"small\" @click=\"goToProfile\" style=\"margin-left:8px;\">个人信息</el-button>\n          <el-button size=\"small\" @click=\"goToLeave\" style=\"margin-left:8px;\">请假申请</el-button>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n  <el-card class=\"ai-card\" style=\"margin-top: 24px;\" :style=\"{ background: aiCardBackground }\">\n      <div style=\"font-weight:bold;font-size:18px;margin-bottom:8px;\">AI智能考勤分析</div>\n      <el-input\n        v-model=\"aiInput\"\n        placeholder=\"请输入你想让AI分析的问题，如：本月考勤异常有哪些？\"\n        @keyup.enter=\"handleAskAI\"\n        clearable\n        style=\"width: 80%; margin-right: 12px;\"\n      />\n      <el-button type=\"primary\" @click=\"handleAskAI\" :loading=\"aiLoading\">发送</el-button>\n      <div v-if=\"aiAnswer\" class=\"ai-answer\" style=\"margin-top:16px;white-space:pre-line;\">\n        <el-divider>AI分析结果</el-divider>\n        {{ aiAnswer }}\n      </div>\n    </el-card>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue'\nimport * as echarts from 'echarts'\nimport axios from 'axios'\nimport dayjs from 'dayjs'\nimport { useRouter } from 'vue-router'\nimport { analyzeAttendance } from '@/api/ai'\n\n// 函数：生成随机浅色或柔和的渐变色\nfunction getRandomSoftGradient() {\n  const hue = Math.random() * 360; // 0-360色相\n  const s1 = Math.random() * 30 + 70; // 70-100饱和度\n  const l1 = Math.random() * 10 + 90; // 90-100亮度 (非常浅)\n  const s2 = Math.random() * 30 + 60; // 60-90饱和度\n  const l2 = Math.random() * 10 + 85; // 85-95亮度 (稍深一点)\n\n  const color1 = `hsl(${hue}, ${s1}%, ${l1}%)`;\n  const color2 = `hsl(${(hue + 60) % 360}, ${s2}%, ${l2}%)`; // 稍微不同的色相\n  const angle = Math.random() * 360;\n  return `linear-gradient(${angle}deg, ${color1}, ${color2})`;\n}\n\n// 为不同的卡片定义背景 ref\nconst welcomeCardBackground = ref(getRandomSoftGradient());\nconst avatarCardBackground = ref(getRandomSoftGradient());\nconst statCardBackground = ref(getRandomSoftGradient());\nconst chartCardBackground = ref(getRandomSoftGradient());\nconst latestEmpCardBackground = ref(getRandomSoftGradient());\nconst announcementCardBackground = ref(getRandomSoftGradient());\nconst aiCardBackground = ref(getRandomSoftGradient());\n\nconst router = useRouter()\n\nconst stats = ref({\n  empCount: 0,\n  deptCount: 0,\n  maleCount: 0,\n  femaleCount: 0\n})\nconst latestEmps = ref([])\nconst deptCounts = ref([])\nconst genderRatio = ref([])\n\nconst deptChart = ref(null)\nconst genderChart = ref(null)\n\nconst userInfo = ref({\n  name: '',\n  avatar: '',\n  job: ''\n})\n\nconst positionMap = { 1: '经理', 2: '总监', 3: '主管', 4: '组长', 5: '普通员工', 6: '其他' }\n\nconst statItems = computed(() => [\n  { label: '员工总数', value: stats.value.empCount, icon: 'el-icon-user', color1: '#409EFF', color2: '#53a8ff' },\n  { label: '部门数', value: stats.value.deptCount, icon: 'el-icon-office-building', color1: '#67C23A', color2: '#95d475' },\n  { label: '男员工', value: stats.value.maleCount, icon: 'el-icon-male', color1: '#36D1C4', color2: '#5B86E5' },\n  { label: '女员工', value: stats.value.femaleCount, icon: 'el-icon-female', color1: '#F56C6C', color2: '#fbbd61' }\n])\nconst aiInput = ref('')\nconst aiAnswer = ref('')\nconst aiLoading = ref(false)\n\nconst latestAnnouncement = ref(null)\n\nconst fetchLatestAnnouncement = async () => {\n  try {\n    const res = await axios.get('/announcement/latest')\n    if (res.data.code === 1 && res.data.data) {\n      latestAnnouncement.value = res.data.data\n    } else {\n      latestAnnouncement.value = null\n    }\n  } catch (error) {\n    console.error('获取最新公告失败:', error)\n    latestAnnouncement.value = null\n  }\n}\n\nconst handleAskAI = async () => {\n  if (!aiInput.value.trim()) return\n  aiLoading.value = true\n  aiAnswer.value = ''\n  try {\n    const res = await analyzeAttendance(aiInput.value)\n    aiAnswer.value = res.data\n  } catch (e) {\n    aiAnswer.value = 'AI分析失败，请稍后重试。'\n  } finally {\n    aiLoading.value = false\n  }\n}\nfunction formatDate(val) {\n  if (!val) return ''\n  return dayjs(val).isValid() ? dayjs(val).format('YYYY-MM-DD') : val\n}\n\nfunction formatEmpId(id) {\n  return id ? id.toString().padStart(9, '0') : ''\n}\n\nfunction renderDeptChart() {\n  const myChart = echarts.init(deptChart.value)\n  myChart.setOption({\n    title: { text: '各部门人数分布', left: 'center', textStyle: { color: '#409EFF', fontSize: 18 } },\n    tooltip: {},\n    xAxis: {\n      type: 'category',\n      data: deptCounts.value.map(item => item.deptName)\n    },\n    yAxis: { type: 'value' },\n    series: [{\n      data: deptCounts.value.map(item => item.count),\n      type: 'bar',\n      barWidth: '50%',\n      itemStyle: { color: '#409EFF' }\n    }]\n  })\n}\n\nfunction renderGenderChart() {\n  const myChart = echarts.init(genderChart.value)\n  myChart.setOption({\n    title: { text: '男女比例', left: 'center', textStyle: { color: '#409EFF', fontSize: 18 } },\n    tooltip: { trigger: 'item' },\n    legend: { bottom: 10, left: 'center' },\n    series: [{\n      name: '性别',\n      type: 'pie',\n      radius: '50%',\n      data: genderRatio.value,\n      label: { formatter: '{b}: {c} ({d}%)' }\n    }]\n  })\n}\n\nconst goToAddEmp = () => router.push('/emp')\nconst goToDept = () => router.push('/dept')\nconst goToAttendance = () => router.push('/attendance')\nconst goToProfile = () => router.push('/profile')\nconst goToLeave = () => router.push('/leave')\n\nonMounted(async () => {\n  const userRes = await axios.get('/emps/profile')\n  if (userRes.data.code === 1) {\n    userInfo.value = {\n      name: userRes.data.data.name,\n      avatar: userRes.data.data.image,\n      job: userRes.data.data.job\n    }\n  }\n  const res = await axios.get('/emps/stats')\n  if (res.data.code === 1) {\n    stats.value.empCount = res.data.data.empCount\n    stats.value.deptCount = res.data.data.deptCount\n    stats.value.maleCount = res.data.data.maleCount\n    stats.value.femaleCount = res.data.data.femaleCount\n    latestEmps.value = res.data.data.latestEmps\n    deptCounts.value = res.data.data.deptCounts\n    genderRatio.value = [\n      { value: res.data.data.maleCount, name: '男' },\n      { value: res.data.data.femaleCount, name: '女' }\n    ]\n    // 渲染图表\n    renderDeptChart()\n    renderGenderChart()\n  }\n  fetchLatestAnnouncement()\n})\n</script>\n\n<style scoped>\n.home-container {\n  padding: 30px;\n  background: #f7f7f7;\n  min-height: 100vh;\n}\n.welcome-card {\n  background: linear-gradient(135deg, #e0eafc 60%, #cfdef3 100%);\n  color: #222;\n  border: none;\n  box-shadow: 0 4px 24px rgba(0,0,0,0.08);\n  border-radius: 16px;\n}\n.avatar-card {\n  background: linear-gradient(135deg, #f3e7e9 60%, #e3eeff 100%);\n  border: none;\n  box-shadow: 0 4px 24px rgba(0,0,0,0.08);\n  border-radius: 16px;\n}\n.welcome-card h2 {\n  font-size: 18px;\n  margin-bottom: 6px;\n}\n.welcome-card p {\n  font-size: 14px;\n  margin-bottom: 0;\n}\n.avatar-card .el-avatar {\n  width: 60px !important;\n  height: 60px !important;\n}\n.avatar-card div {\n  font-size: 16px !important;\n}\n.stat-block {\n  min-height: 70px !important;\n  padding: 10px 0 !important;\n  font-size: 15px !important;\n}\n.el-card[style*=\"background:linear-gradient\"] {\n  min-height: 70px !important;\n  padding: 10px 0 !important;\n  font-size: 15px !important;\n}\n.dept-chart, .gender-chart {\n  height: 220px !important;\n  min-height: 200px !important;\n  max-height: 240px !important;\n}\nul {\n  padding-left: 20px;\n  margin: 0;\n}\nli {\n  line-height: 1.8;\n}\n.el-button {\n  font-size: 13px !important;\n  padding: 4px 14px !important;\n  border-radius: 14px !important;\n}\n.ai-card {\n  max-width: 800px;\n  margin: 0 auto;\n}\n.ai-answer {\n  background: #f6f8fa;\n  border-radius: 8px;\n  padding: 16px;\n  color: #222;\n  font-size: 16px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}