{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, withKeys as _withKeys, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"emp-voice-container\"\n};\nconst _hoisted_2 = {\n  class: \"post-area\"\n};\nconst _hoisted_3 = {\n  class: \"filter-area\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  class: \"voice-items-list\"\n};\nconst _hoisted_5 = {\n  class: \"voice-header\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"voice-meta\"\n};\nconst _hoisted_8 = {\n  class: \"emp-name\"\n};\nconst _hoisted_9 = {\n  class: \"post-time\"\n};\nconst _hoisted_10 = {\n  class: \"voice-content\"\n};\nconst _hoisted_11 = {\n  class: \"voice-actions\"\n};\nconst _hoisted_12 = {\n  key: 0,\n  class: \"comment-list\"\n};\nconst _hoisted_13 = [\"src\"];\nconst _hoisted_14 = {\n  class: \"comment-content-wrap\"\n};\nconst _hoisted_15 = {\n  class: \"comment-meta\"\n};\nconst _hoisted_16 = {\n  class: \"comment-emp-name\"\n};\nconst _hoisted_17 = {\n  class: \"comment-time\"\n};\nconst _hoisted_18 = {\n  class: \"comment-text\"\n};\nconst _hoisted_19 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 发表心声区域 \"), _createVNode($setup[\"ElCard\"], {\n    class: \"post-voice-card\"\n  }, {\n    header: _withCtx(() => _cache[6] || (_cache[6] = [_createElementVNode(\"div\", {\n      class: \"card-header\"\n    }, [_createElementVNode(\"span\", {\n      class: \"header-title\"\n    }, \"发表你的心声\"), _createElementVNode(\"div\", {\n      class: \"header-desc\"\n    }, \"在这里留下你想说的话吧！\")], -1 /* HOISTED */)])),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createVNode($setup[\"ElInput\"], {\n      modelValue: $setup.content,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.content = $event),\n      type: \"textarea\",\n      placeholder: \"说出你的心声吧~\",\n      rows: 4,\n      maxlength: \"500\",\n      \"show-word-limit\": \"\",\n      class: \"voice-textarea\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode($setup[\"ElButton\"], {\n      type: \"primary\",\n      onClick: $setup.postVoice,\n      class: \"post-button\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"ElIcon\"], null, {\n        default: _withCtx(() => [_createVNode($setup[\"Promotion\"])]),\n        _: 1 /* STABLE */\n      }), _cache[7] || (_cache[7] = _createTextVNode(\"发表心声 \"))]),\n      _: 1 /* STABLE */,\n      __: [7]\n    })])]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 心声列表区域 \"), _withDirectives((_openBlock(), _createBlock($setup[\"ElCard\"], {\n    class: \"voice-list-card\"\n  }, {\n    header: _withCtx(() => _cache[8] || (_cache[8] = [_createElementVNode(\"div\", {\n      class: \"card-header\"\n    }, [_createElementVNode(\"span\", {\n      class: \"header-title\"\n    }, \"员工心声列表\"), _createElementVNode(\"div\", {\n      class: \"header-desc\"\n    }, \"大家的心声都在这里\")], -1 /* HOISTED */)])),\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createVNode($setup[\"ElInput\"], {\n      modelValue: $setup.keyword,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.keyword = $event),\n      placeholder: \"搜索心声内容或姓名...\",\n      class: \"search-input\",\n      onKeyup: _withKeys($setup.fetchVoices, [\"enter\"]),\n      clearable: \"\"\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createVNode($setup[\"ElButton\"], {\n      onClick: $setup.fetchVoices,\n      class: \"search-button\"\n    }, {\n      default: _withCtx(() => [_createVNode($setup[\"ElIcon\"], null, {\n        default: _withCtx(() => [_createVNode($setup[\"Search\"])]),\n        _: 1 /* STABLE */\n      }), _cache[9] || (_cache[9] = _createTextVNode(\"搜索 \"))]),\n      _: 1 /* STABLE */,\n      __: [9]\n    })]), $setup.voices.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.voices, item => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        class: \"voice-item\",\n        key: item.id\n      }, [_createElementVNode(\"div\", _hoisted_5, [item.image ? (_openBlock(), _createElementBlock(\"img\", {\n        key: 0,\n        src: item.image,\n        size: 40,\n        class: \"voice-avatar-img\"\n      }, null, 8 /* PROPS */, _hoisted_6)) : (_openBlock(), _createBlock($setup[\"ElAvatar\"], {\n        key: 1,\n        size: 40,\n        class: \"voice-avatar\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(item.empName?.charAt(0)?.toUpperCase()), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"span\", _hoisted_8, _toDisplayString(item.empName), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_9, _toDisplayString($setup.formatDate(item.createTime)), 1 /* TEXT */)])]), _createElementVNode(\"div\", _hoisted_10, _toDisplayString(item.content), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_11, [$setup.canDelete(item) ? (_openBlock(), _createBlock($setup[\"ElButton\"], {\n        key: 0,\n        onClick: $event => $setup.deleteVoice(item.id),\n        type: \"danger\",\n        size: \"small\",\n        icon: \"Delete\",\n        circle: \"\"\n      }, null, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode($setup[\"ElButton\"], {\n        onClick: $event => $setup.toggleLike(item),\n        size: \"small\",\n        type: item.hasLiked ? 'primary' : 'info',\n        icon: item.hasLiked ? 'StarFilled' : 'Star'\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(item.likeCount || 0), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\", \"type\", \"icon\"]), _createVNode($setup[\"ElButton\"], {\n        onClick: $event => $setup.openCommentDialog(item),\n        size: \"small\",\n        icon: \"ChatDotRound\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" 评论 (\" + _toDisplayString(item.comments ? item.comments.length : 0) + \") \", 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]), _createCommentVNode(\" 评论列表 \"), item.comments && item.comments.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.comments, c => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          class: \"comment-item\",\n          key: c.id\n        }, [c.image ? (_openBlock(), _createElementBlock(\"img\", {\n          key: 0,\n          src: c.image,\n          size: 28,\n          class: \"comment-avatar-img\"\n        }, null, 8 /* PROPS */, _hoisted_13)) : (_openBlock(), _createBlock($setup[\"ElAvatar\"], {\n          key: 1,\n          size: 28,\n          class: \"comment-avatar\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString(c.empName?.charAt(0)?.toUpperCase()), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)), _createElementVNode(\"div\", _hoisted_14, [_createElementVNode(\"div\", _hoisted_15, [_createElementVNode(\"span\", _hoisted_16, _toDisplayString(c.empName), 1 /* TEXT */), _createElementVNode(\"span\", _hoisted_17, _toDisplayString($setup.formatDate(c.createTime)), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_18, _toDisplayString(c.content), 1 /* TEXT */)]), $setup.canDeleteComment(c) ? (_openBlock(), _createBlock($setup[\"ElButton\"], {\n          key: 2,\n          onClick: $event => $setup.deleteComment(c.id),\n          type: \"danger\",\n          size: \"small\",\n          icon: \"Delete\",\n          circle: \"\",\n          class: \"delete-comment-button\"\n        }, null, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]);\n      }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))])) : (_openBlock(), _createBlock($setup[\"ElEmpty\"], {\n      key: 1,\n      description: \"暂无心声\"\n    })), _createVNode($setup[\"ElPagination\"], {\n      total: $setup.total,\n      \"page-size\": $setup.pageSize,\n      \"current-page\": $setup.page,\n      onCurrentChange: _cache[2] || (_cache[2] = val => {\n        $setup.page = val;\n        $setup.fetchVoices();\n      }),\n      layout: \"prev, pager, next, total\",\n      background: \"\",\n      class: \"pagination-footer\"\n    }, null, 8 /* PROPS */, [\"total\", \"page-size\", \"current-page\"])]),\n    _: 1 /* STABLE */\n  })), [[_directive_loading, $setup.loading]]), _createCommentVNode(\" 发表评论弹窗 \"), _createVNode($setup[\"ElDialog\"], {\n    modelValue: $setup.commentDialogVisible,\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.commentDialogVisible = $event),\n    title: \"发表评论\",\n    width: \"400px\",\n    class: \"comment-dialog\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_19, [_createVNode($setup[\"ElButton\"], {\n      onClick: _cache[4] || (_cache[4] = $event => $setup.commentDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */,\n      __: [10]\n    }), _createVNode($setup[\"ElButton\"], {\n      type: \"primary\",\n      onClick: $setup.submitComment\n    }, {\n      default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\"发表\")])),\n      _: 1 /* STABLE */,\n      __: [11]\n    })])]),\n    default: _withCtx(() => [_createVNode($setup[\"ElInput\"], {\n      modelValue: $setup.commentDialogContent,\n      \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.commentDialogContent = $event),\n      type: \"textarea\",\n      placeholder: \"请输入评论内容\",\n      maxlength: \"200\",\n      \"show-word-limit\": \"\",\n      rows: \"4\"\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","$setup","header","_withCtx","_cache","_createElementVNode","default","_hoisted_2","modelValue","content","$event","type","placeholder","rows","maxlength","onClick","postVoice","_","_createTextVNode","__","_createBlock","_hoisted_3","keyword","onKeyup","_withKeys","fetchVoices","clearable","voices","length","_hoisted_4","_Fragment","_renderList","item","id","_hoisted_5","image","src","size","_hoisted_6","_toDisplayString","empName","charAt","toUpperCase","_hoisted_7","_hoisted_8","_hoisted_9","formatDate","createTime","_hoisted_10","_hoisted_11","canDelete","deleteVoice","icon","circle","toggleLike","hasLiked","likeCount","openCommentDialog","comments","_hoisted_12","c","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","canDeleteComment","deleteComment","description","total","pageSize","page","onCurrentChange","val","layout","background","loading","commentDialogVisible","title","width","footer","_hoisted_19","submitComment","commentDialogContent"],"sources":["D:\\web_code\\zxyf\\test_vue\\src\\components\\EmpVoice.vue"],"sourcesContent":["<template>\n  <div class=\"emp-voice-container\">\n    <!-- 发表心声区域 -->\n    <el-card class=\"post-voice-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span class=\"header-title\">发表你的心声</span>\n          <div class=\"header-desc\">在这里留下你想说的话吧！</div>\n        </div>\n      </template>\n      \n      <div class=\"post-area\">\n        <el-input\n          v-model=\"content\"\n          type=\"textarea\"\n          placeholder=\"说出你的心声吧~\"\n          :rows=\"4\"\n          maxlength=\"500\"\n          show-word-limit\n          class=\"voice-textarea\"\n        />\n        <el-button type=\"primary\" @click=\"postVoice\" class=\"post-button\">\n          <el-icon><Promotion /></el-icon>发表心声\n        </el-button>\n      </div>\n    </el-card>\n\n    <!-- 心声列表区域 -->\n    <el-card class=\"voice-list-card\" v-loading=\"loading\">\n      <template #header>\n        <div class=\"card-header\">\n          <span class=\"header-title\">员工心声列表</span>\n          <div class=\"header-desc\">大家的心声都在这里</div>\n        </div>\n      </template>\n\n      <div class=\"filter-area\">\n        <el-input v-model=\"keyword\" placeholder=\"搜索心声内容或姓名...\" class=\"search-input\" @keyup.enter=\"fetchVoices\" clearable />\n        <el-button @click=\"fetchVoices\" class=\"search-button\">\n          <el-icon><Search /></el-icon>搜索\n        </el-button>\n      </div>\n\n      <div v-if=\"voices.length > 0\" class=\"voice-items-list\">\n        <div class=\"voice-item\" v-for=\"item in voices\" :key=\"item.id\">\n          <div class=\"voice-header\">\n            <template v-if=\"item.image\">\n              <img :src=\"item.image\" :size=\"40\" class=\"voice-avatar-img\"/>\n            </template>\n            <template v-else>\n              <el-avatar :size=\"40\" class=\"voice-avatar\">\n                 {{ item.empName?.charAt(0)?.toUpperCase() }} \n              </el-avatar>\n            </template>\n            <div class=\"voice-meta\">\n              <span class=\"emp-name\">{{ item.empName }}</span>\n              <span class=\"post-time\">{{ formatDate(item.createTime) }}</span>\n            </div>\n          </div>\n          <div class=\"voice-content\">{{ item.content }}</div>\n          <div class=\"voice-actions\">\n            <el-button\n              v-if=\"canDelete(item)\"\n              @click=\"deleteVoice(item.id)\"\n              type=\"danger\"\n              size=\"small\"\n              icon=\"Delete\"\n              circle\n            ></el-button>\n             <el-button\n                @click=\"toggleLike(item)\"\n                size=\"small\"\n                :type=\"item.hasLiked ? 'primary' : 'info'\"\n                :icon=\"item.hasLiked ? 'StarFilled' : 'Star'\"\n              >\n                {{ item.likeCount || 0 }}\n            </el-button>\n             <el-button\n                @click=\"openCommentDialog(item)\"\n                size=\"small\"\n                icon=\"ChatDotRound\"\n              >\n                评论 ({{ item.comments ? item.comments.length : 0 }})\n              </el-button>\n          </div>\n          <!-- 评论列表 -->\n          <div v-if=\"item.comments && item.comments.length > 0\" class=\"comment-list\">\n            <div class=\"comment-item\" v-for=\"c in item.comments\" :key=\"c.id\">\n              <template v-if=\"c.image\">\n                <img :src=\"c.image\" :size=\"28\" class=\"comment-avatar-img\"/>\n              </template>\n              <template v-else>\n                <el-avatar :size=\"28\" class=\"comment-avatar\">\n                   {{ c.empName?.charAt(0)?.toUpperCase() }}\n                </el-avatar>\n              </template>\n              <div class=\"comment-content-wrap\">\n                 <div class=\"comment-meta\">\n                   <span class=\"comment-emp-name\">{{ c.empName }}</span>\n                   <span class=\"comment-time\">{{ formatDate(c.createTime) }}</span>\n                 </div>\n                 <div class=\"comment-text\">{{ c.content }}</div>\n              </div>\n               <el-button\n                v-if=\"canDeleteComment(c)\"\n                @click=\"deleteComment(c.id)\"\n                type=\"danger\"\n                size=\"small\"\n                icon=\"Delete\"\n                circle\n                class=\"delete-comment-button\"\n              ></el-button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <el-empty v-else description=\"暂无心声\"></el-empty>\n\n      <el-pagination\n        :total=\"total\"\n        :page-size=\"pageSize\"\n        :current-page=\"page\"\n        @current-change=\"val => { page = val; fetchVoices() }\"\n        layout=\"prev, pager, next, total\"\n        background\n        class=\"pagination-footer\"\n      />\n    </el-card>\n\n    <!-- 发表评论弹窗 -->\n    <el-dialog v-model=\"commentDialogVisible\" title=\"发表评论\" width=\"400px\" class=\"comment-dialog\">\n      <el-input\n        v-model=\"commentDialogContent\"\n        type=\"textarea\"\n        placeholder=\"请输入评论内容\"\n        maxlength=\"200\"\n        show-word-limit\n        rows=\"4\"\n      />\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"commentDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitComment\">发表</el-button>\n        </span>\n      </template>\n    </el-dialog>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport axios from 'axios'\nimport { ElMessage, ElCard, ElInput, ElButton, ElDivider, ElAvatar, ElPagination, ElDialog, ElEmpty, ElIcon, ElTag } from 'element-plus'\nimport { Promotion, Search, Delete, StarFilled, Star, ChatDotRound } from '@element-plus/icons-vue'\nimport dayjs from 'dayjs'\n\nconst content = ref('')\nconst voices = ref([])\nconst page = ref(1)\nconst pageSize = ref(10)\nconst total = ref(0)\nconst keyword = ref('')\nconst user = JSON.parse(localStorage.getItem('user') || '{}')\n\nconst loading = ref(false)\nconst commentDialogVisible = ref(false)\nconst commentDialogContent = ref('')\nconst commentDialogVoiceId = ref(null)\n\nconst fetchVoices = async () => {\n  loading.value = true\n  try {\n    const res = await axios.get('/voice/list', { params: { page: page.value, pageSize: pageSize.value, keyword: keyword.value } })\n    if (res.data.code === 1) {\n      console.log('获取到的心声列表数据:', res.data.data.rows);\n      voices.value = res.data.data.rows\n      total.value = res.data.data.total\n       // 确保每条心声和评论对象都有 image 字段，即使后端未提供，避免前端报错\n       voices.value.forEach(voice => {\n         if (!voice.image) voice.image = '';\n         voice.comments?.forEach(comment => {\n           if (!comment.image) comment.image = '';\n         });\n       });\n    }\n  } finally {\n    loading.value = false\n  }\n}\n\nonMounted(fetchVoices)\n\nconst postVoice = async () => {\n  if (!content.value.trim()) {\n    ElMessage.warning('内容不能为空')\n    return\n  }\n  // 检查用户是否已登录\n  if (!user || !user.id) {\n      ElMessage.error('请先登录');\n      return;\n  }\n  try {\n    const res = await axios.post('/voice/post', { content: content.value }, { headers: { token: localStorage.getItem('token') } })\n    if (res.data.code === 1) {\n      ElMessage.success('发表成功')\n      content.value = ''\n      page.value = 1; // 发表成功后回到第一页\n      fetchVoices()\n    } else {\n      ElMessage.error(res.data.msg || '发表失败')\n    }\n  } catch (error) {\n      ElMessage.error('发表异常');\n      console.error(error);\n  }\n}\n\nconst deleteVoice = async (id) => {\n   // 检查用户是否已登录\n  if (!user || !user.id) {\n      ElMessage.error('请先登录');\n      return;\n  }\n  try {\n    const res = await axios.delete(`/voice/delete/${id}`, { headers: { token: localStorage.getItem('token') } })\n    if (res.data.code === 1) {\n      ElMessage.success('删除成功')\n      fetchVoices()\n    } else {\n      ElMessage.error(res.data.msg || '删除失败')\n    }\n  } catch (error) {\n      ElMessage.error('删除异常');\n      console.error(error);\n  }\n}\n\nconst canDelete = (item) => {\n  console.log('当前用户信息:', user);\n  console.log('当前帖子信息:', item);\n  return user && (user.username === 'admin' || user.id === item.emp_id)\n}\n\nconst toggleLike = async (item) => {\n    // 检查用户是否已登录\n  if (!user || !user.id) {\n      ElMessage.error('请先登录');\n      return;\n  }\n  try {\n    // 优化：先乐观更新 UI，再发送请求\n    if (item.hasLiked) {\n      item.hasLiked = false;\n      item.likeCount = (item.likeCount || 0) - 1;\n      await axios.post(`/voice/unlike/${item.id}`, null, { headers: { token: localStorage.getItem('token') } });\n    } else {\n      item.hasLiked = true;\n      item.likeCount = (item.likeCount || 0) + 1;\n       await axios.post(`/voice/like/${item.id}`, null, { headers: { token: localStorage.getItem('token') } });\n    }\n     // 成功后不需要再 refetchVoices，后端如果返回最新数据更好\n     // fetchVoices() // 如果后端不支持返回最新列表，才需要这行\n\n  } catch (error) {\n      ElMessage.error('操作失败，请重试');\n       // 如果请求失败，回滚 UI 状态\n      item.hasLiked = !item.hasLiked;\n      item.likeCount = (item.likeCount || 0) + (item.hasLiked ? -1 : 1);\n      console.error(error);\n  }\n}\n\nfunction openCommentDialog(voiceItem) {\n  // 检查用户是否已登录\n  if (!user || !user.id) {\n      ElMessage.error('请先登录');\n      return;\n  }\n  commentDialogVoiceId.value = voiceItem.id // 传递整个item或者只传递id都可以，看后续submit需不需要其他信息\n  commentDialogContent.value = ''\n  commentDialogVisible.value = true\n}\n\nasync function submitComment() {\n  if (!commentDialogContent.value.trim()) {\n    ElMessage.warning('评论不能为空')\n    return\n  }\n   // 检查用户是否已登录\n  if (!user || !user.id) {\n      ElMessage.error('请先登录');\n      return;\n  }\n  if (!commentDialogVoiceId.value) return; // 确保有心声ID\n\n  try {\n    const res = await axios.post('/voice/comment', {\n      voiceId: commentDialogVoiceId.value,\n      content: commentDialogContent.value\n    }, { headers: { token: localStorage.getItem('token') } })\n    if (res.data.code === 1) {\n      ElMessage.success('评论成功')\n      commentDialogVisible.value = false\n      // 找到对应的心声，手动添加评论，或者刷新列表\n      fetchVoices() // 刷新列表确保数据一致性\n    } else {\n      ElMessage.error(res.data.msg || '评论失败')\n    }\n  } catch (error) {\n    ElMessage.error('发表评论异常');\n    console.error(error);\n  }\n}\n\nfunction formatDate(val) {\n  return dayjs(val).format('YYYY-MM-DD HH:mm')\n}\n\nfunction canDeleteComment(comment) {\n  console.log('当前用户信息:', user);\n  console.log('当前评论信息:', comment);\n  return user && (user.id === comment.emp_id || user.username === 'admin')\n}\n\nasync function deleteComment(commentId) {\n    // 检查用户是否已登录\n  if (!user || !user.id) {\n      ElMessage.error('请先登录');\n      return;\n  }\n  try {\n    const res = await axios.delete(`/voice/comment/delete/${commentId}`, { headers: { token: localStorage.getItem('token') } });\n    if (res.data.code === 1) {\n      ElMessage.success('评论删除成功');\n      fetchVoices(); // 删除成功后刷新列表\n    } else {\n      ElMessage.error(res.data.msg || '评论删除失败');\n    }\n  } catch (error) {\n    ElMessage.error('评论删除异常');\n    console.error(error);\n  }\n}\n\n</script>\n\n<style scoped>\n.emp-voice-container {\n  padding: 20px;\n  background-color: #f0f2f5; /* 轻微的背景色 */\n  min-height: calc(100vh - 64px - 40px); /* 减去header和padding的高度 */\n}\n\n.post-voice-card,\n.voice-list-card {\n  margin-bottom: 20px;\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.06);\n  transition: all 0.3s ease;\n}\n\n.post-voice-card:hover,\n.voice-list-card:hover {\n   transform: translateY(-2px);\n   box-shadow: 0 6px 24px rgba(0, 0, 0, 0.08);\n}\n\n.card-header {\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n}\n\n.header-title {\n  font-size: 18px;\n  font-weight: bold;\n  color: #333;\n}\n\n.header-desc {\n  font-size: 13px;\n  color: #909399;\n}\n\n.post-area {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.voice-textarea :deep(.el-textarea__inner) {\n  border-radius: 8px;\n  padding: 10px;\n  font-size: 14px;\n  line-height: 1.6;\n  transition: border-color 0.3s, box-shadow 0.3s;\n}\n\n.voice-textarea :deep(.el-textarea__inner:focus) {\n  border-color: #409EFF;\n  box-shadow: 0 0 0 1px rgba(64, 158, 255, 0.2);\n}\n\n.post-button {\n  align-self: flex-end; /* 按钮靠右对齐 */\n  width: 120px;\n  border-radius: 20px;\n  font-weight: bold;\n  transition: all 0.3s ease;\n}\n\n.post-button:hover {\n  transform: translateY(-1px);\n  box-shadow: 0 4px 12px rgba(64, 158, 255, 0.3);\n}\n\n.filter-area {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\n.search-input {\n  flex-grow: 1;\n}\n\n.search-input :deep(.el-input__inner) {\n    border-radius: 8px;\n}\n\n.search-button {\n    border-radius: 8px;\n}\n\n.voice-items-list {\n  /* 列表容器的样式 */\n}\n\n.voice-item {\n  border-bottom: 1px solid #eee;\n  padding: 15px 0;\n  display: flex;\n  flex-direction: column;\n}\n\n.voice-header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.voice-avatar-img {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-right: 12px;\n  flex-shrink: 0;\n}\n\n.voice-avatar {\n  margin-right: 12px;\n  flex-shrink: 0; /* 防止头像被挤压 */\n  background: linear-gradient(135deg, #409EFF 0%, #36D1DC 100%); /* 默认头像渐变 */\n  color: #fff;\n  font-weight: bold;\n}\n\n.voice-meta {\n  display: flex;\n  flex-direction: column;\n}\n\n.emp-name {\n  font-weight: bold;\n  color: #333;\n  font-size: 15px;\n}\n\n.post-time {\n  color: #909399;\n  font-size: 12px;\n  margin-top: 2px;\n}\n\n.voice-content {\n  margin: 5px 0 10px 52px; /* 与头像对齐并留出空间 */\n  color: #555;\n  line-height: 1.6;\n  word-break: break-word; /* 自动换行 */\n}\n\n.voice-actions {\n  display: flex;\n  justify-content: flex-end; /* 操作按钮靠右 */\n  align-items: center;\n  margin-top: 8px;\n  gap: 8px; /* 按钮之间的间距 */\n}\n\n.voice-actions .el-button {\n    transition: all 0.2s ease;\n}\n\n.voice-actions .el-button:hover {\n    transform: translateY(-1px);\n}\n\n.comment-list {\n  margin-top: 12px;\n  padding-left: 52px; /* 与心声内容对齐 */\n  border-top: 1px solid #eee;\n  padding-top: 12px;\n  background-color: #fefefe; /* 评论区域浅色背景 */\n  border-radius: 8px;\n}\n\n.comment-item {\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 12px;\n  padding-bottom: 8px;\n  border-bottom: 1px dashed #eee; /* 评论之间的虚线 */\n  position: relative; /* 为了删除按钮定位 */\n}\n\n.comment-item:last-child {\n    border-bottom: none; /* 最后一个评论没有底线 */\n    padding-bottom: 0;\n}\n\n.comment-avatar-img {\n  width: 28px;\n  height: 28px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-right: 10px;\n  flex-shrink: 0;\n}\n\n.comment-avatar {\n  margin-right: 10px;\n  flex-shrink: 0;\n    background: linear-gradient(135deg, #36D1DC 0%, #5B86E5 100%); /* 评论头像渐变 */\n  color: #fff;\n  font-weight: bold;\n}\n\n.comment-content-wrap {\n  flex-grow: 1;\n  min-width: 0; /* 允许在 flex 布局中收缩 */\n}\n\n.comment-meta {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-bottom: 4px;\n}\n\n.comment-emp-name {\n  font-weight: bold;\n  color: #555;\n  font-size: 13px;\n}\n\n.comment-time {\n  color: #a0a0a0;\n  font-size: 11px;\n}\n\n.comment-text {\n  color: #333;\n  font-size: 14px;\n  line-height: 1.5;\n  word-break: break-word;\n}\n\n.delete-comment-button {\n   margin-left: 8px; /* 按钮与评论内容之间的间距 */\n   /* 可以添加绝对定位等更复杂的布局 */\n}\n\n.el-empty {\n    padding: 40px 0;\n}\n\n.pagination-footer {\n  margin-top: 20px;\n  justify-content: flex-end; /* 分页靠右 */\n  display: flex;\n}\n\n.comment-dialog :deep(.el-dialog__body) {\n    padding: 20px;\n}\n\n.dialog-footer {\n    /* 弹窗底部按钮样式 */\n}\n\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}