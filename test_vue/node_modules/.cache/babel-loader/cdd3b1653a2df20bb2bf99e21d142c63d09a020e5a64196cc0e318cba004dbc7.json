{"ast":null,"code":"import axios from 'axios';\nimport { ref, reactive, onMounted, computed } from 'vue';\nimport { ElMessageBox, ElMessage } from 'element-plus';\nimport dayjs from 'dayjs';\nconst BASE_URL = 'http://localhost:8080';\nexport default {\n  name: 'EmployeeManage',\n  setup() {\n    const isAdmin = computed(() => {\n      const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {};\n      return user && user.username === 'admin';\n    });\n    // 查询条件\n    const query = reactive({\n      name: '',\n      gender: '',\n      hireRange: [],\n      page: 1,\n      pageSize: 10,\n      sortField: '',\n      sortOrder: ''\n    });\n    const empList = ref([]);\n    const total = ref(0);\n    const loading = ref(false);\n    const dialogVisible = ref(false);\n    const dialogTitle = ref('');\n    const isEdit = ref(false);\n    const form = reactive({\n      id: null,\n      username: '',\n      password: '',\n      name: '',\n      gender: '',\n      phone: '',\n      job: '',\n      salary: '',\n      image: '',\n      entryDate: '',\n      deptId: '',\n      createTime: '',\n      updateTime: '',\n      exprList: []\n    });\n    const formRef = ref(null);\n    const rules = {\n      username: [{\n        required: true,\n        message: '请输入工号',\n        trigger: 'blur'\n      }],\n      name: [{\n        required: true,\n        message: '请输入姓名',\n        trigger: 'blur'\n      }],\n      gender: [{\n        required: true,\n        message: '请选择性别',\n        trigger: 'change'\n      }],\n      phone: [{\n        required: true,\n        message: '请输入手机号',\n        trigger: 'blur'\n      }],\n      job: [{\n        required: true,\n        message: '请选择职位',\n        trigger: 'change'\n      }],\n      entryDate: [{\n        required: true,\n        message: '请选择入职日期',\n        trigger: 'change'\n      }],\n      deptId: [{\n        required: true,\n        message: '请选择部门',\n        trigger: 'change'\n      }],\n      salary: [{\n        required: true,\n        message: '请输入薪资',\n        trigger: 'blur'\n      }],\n      image: [{\n        required: true,\n        message: '请上传头像',\n        trigger: 'change'\n      }]\n    };\n    const deptList = ref([{\n      id: 1,\n      name: '人事部'\n    }, {\n      id: 2,\n      name: '销售部'\n    }, {\n      id: 3,\n      name: '技术部'\n    }, {\n      id: 4,\n      name: '市场部'\n    }, {\n      id: 5,\n      name: '财务部'\n    }, {\n      id: 6,\n      name: '法务部'\n    }]);\n    const positionMap = {\n      1: '经理',\n      2: '总监',\n      3: '主管',\n      4: '组长',\n      5: '普通员工',\n      6: '其他'\n    };\n    // 上传相关\n    const uploadUrl = 'http://localhost:8080/emps/upload';\n    const uploadHeaders = {};\n    const handleUploadSuccess = (res, file) => {\n      console.log('上传返回内容', res);\n      if (res.data.startsWith('/upload/')) {\n        form.image = `http://localhost:8080${res.data}`;\n      } else if (res.data.startsWith('http')) {\n        form.image = res.data;\n      } else {\n        form.image = `http://localhost:8080/upload/${res.data}`;\n      }\n    };\n    const beforeUpload = file => {\n      const isJPG = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/jpg';\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isJPG) {\n        ElMessage.error('上传头像图片只能是 JPG/PNG/JPEG 格式!');\n        return false;\n      }\n      if (!isLt2M) {\n        ElMessage.error('上传头像图片大小不能超过 2MB!');\n        return false;\n      }\n      return true;\n    };\n    // 格式化时间\n    const formatDate = val => {\n      if (!val) return '';\n      if (Array.isArray(val)) {\n        return dayjs(new Date(val[0], val[1] - 1, val[2])).format('YYYY-MM-DD');\n      }\n      return dayjs(val).isValid() ? dayjs(val).format('YYYY-MM-DD') : val;\n    };\n    const formatDateTime = val => {\n      if (!val) return '';\n      if (Array.isArray(val)) {\n        return dayjs(new Date(val[0], val[1] - 1, val[2], val[3] || 0, val[4] || 0, val[5] || 0)).format('YYYY-MM-DD HH:mm:ss');\n      }\n      return dayjs(val).isValid() ? dayjs(val).format('YYYY-MM-DD HH:mm:ss') : val;\n    };\n    // 查询员工列表\n    const fetchEmps = async () => {\n      loading.value = true;\n      try {\n        const params = {};\n        if (query.name) params.name = query.name;\n        if (query.gender) params.gender = query.gender;\n        params.page = query.page;\n        params.pageSize = query.pageSize;\n        if (query.hireRange && query.hireRange.length === 2) {\n          params.begin = query.hireRange[0];\n          params.end = query.hireRange[1];\n        }\n        if (query.sortField) params.sortField = query.sortField;\n        if (query.sortOrder) params.sortOrder = query.sortOrder;\n        const res = await axios.get(`${BASE_URL}/emps`, {\n          params\n        });\n        if (res.data.code === 1 && res.data.data && Array.isArray(res.data.data.rows)) {\n          empList.value = res.data.data.rows;\n          total.value = res.data.data.total;\n        }\n      } finally {\n        loading.value = false;\n      }\n    };\n    // 处理表格排序事件\n    const handleSortChange = ({\n      prop,\n      order\n    }) => {\n      query.sortField = prop;\n      query.sortOrder = order === 'ascending' ? 'asc' : order === 'descending' ? 'desc' : '';\n      query.page = 1;\n      fetchEmps();\n    };\n    // 重置查询\n    const resetQuery = () => {\n      query.name = '';\n      query.gender = '';\n      query.hireRange = [];\n      query.page = 1;\n      fetchEmps();\n    };\n    // 打开新增弹窗\n    const openAddDialog = () => {\n      dialogTitle.value = '新增员工';\n      isEdit.value = false;\n      Object.assign(form, {\n        id: null,\n        username: '',\n        name: '',\n        gender: '',\n        phone: '',\n        job: '',\n        entryDate: '',\n        deptId: '',\n        salary: '',\n        image: '',\n        exprList: []\n      });\n      dialogVisible.value = true;\n    };\n    // 打开编辑弹窗\n    const openEditDialog = async row => {\n      dialogTitle.value = '编辑员工';\n      isEdit.value = true;\n      const res = await axios.get(`${BASE_URL}/emps/${row.id}`);\n      if (res.data.code === 1) {\n        Object.assign(form, res.data.data);\n        if (!form.exprList) form.exprList = [];\n        // 工作经历时间格式转换\n        form.exprList = form.exprList.map(expr => ({\n          ...expr,\n          begin: Array.isArray(expr.begin) ? dayjs(new Date(expr.begin[0], expr.begin[1] - 1, expr.begin[2])).format('YYYY-MM-DD') : expr.begin,\n          end: Array.isArray(expr.end) ? dayjs(new Date(expr.end[0], expr.end[1] - 1, expr.end[2])).format('YYYY-MM-DD') : expr.end\n        }));\n        // 入职日期格式转换\n        if (Array.isArray(form.entryDate)) {\n          form.entryDate = dayjs(new Date(form.entryDate[0], form.entryDate[1] - 1, form.entryDate[2])).format('YYYY-MM-DD');\n        }\n      }\n      dialogVisible.value = true;\n    };\n    // 新增/编辑提交\n    const handleSubmit = () => {\n      formRef.value.validate(async valid => {\n        if (!valid) return;\n        if (isEdit.value) {\n          await axios.put(`${BASE_URL}/emps`, form);\n          ElMessage.success('修改成功');\n        } else {\n          await axios.post(`${BASE_URL}/emps`, form);\n          ElMessage.success('新增成功');\n        }\n        dialogVisible.value = false;\n        fetchEmps();\n      });\n    };\n    // 删除员工\n    const handleDelete = id => {\n      ElMessageBox.confirm('确定要删除该员工吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        await axios.delete(`${BASE_URL}/emps`, {\n          params: {\n            ids: id\n          }\n        });\n        ElMessage.success('删除成功');\n        fetchEmps();\n      }).catch(() => {});\n    };\n    // 初始化\n    onMounted(() => {\n      fetchEmps();\n    });\n    function formatEmpId(id) {\n      return id ? id.toString().padStart(9, '0') : '';\n    }\n    return {\n      isAdmin,\n      query,\n      empList,\n      total,\n      loading,\n      dialogVisible,\n      dialogTitle,\n      isEdit,\n      form,\n      formRef,\n      rules,\n      deptList,\n      positionMap,\n      uploadUrl,\n      uploadHeaders,\n      handleUploadSuccess,\n      beforeUpload,\n      formatDate,\n      formatDateTime,\n      fetchEmps,\n      resetQuery,\n      openAddDialog,\n      openEditDialog,\n      handleSubmit,\n      handleDelete,\n      formatEmpId,\n      handleSortChange\n    };\n  }\n};","map":{"version":3,"names":["axios","ref","reactive","onMounted","computed","ElMessageBox","ElMessage","dayjs","BASE_URL","name","setup","isAdmin","user","localStorage","getItem","JSON","parse","username","query","gender","hireRange","page","pageSize","sortField","sortOrder","empList","total","loading","dialogVisible","dialogTitle","isEdit","form","id","password","phone","job","salary","image","entryDate","deptId","createTime","updateTime","exprList","formRef","rules","required","message","trigger","deptList","positionMap","uploadUrl","uploadHeaders","handleUploadSuccess","res","file","console","log","data","startsWith","beforeUpload","isJPG","type","isLt2M","size","error","formatDate","val","Array","isArray","Date","format","isValid","formatDateTime","fetchEmps","value","params","length","begin","end","get","code","rows","handleSortChange","prop","order","resetQuery","openAddDialog","Object","assign","openEditDialog","row","map","expr","handleSubmit","validate","valid","put","success","post","handleDelete","confirm","confirmButtonText","cancelButtonText","then","delete","ids","catch","formatEmpId","toString","padStart"],"sources":["D:\\web_code\\zxyf\\test_vue\\src\\components\\Emp.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card>\n      <div style=\"display: flex; align-items: center; border-bottom: 2px solid #1890ff; margin-bottom: 0;\">\n        <span style=\"font-size: 20px; font-weight: bold; color: #1890ff; border-bottom: 2px solid #1890ff; padding: 0 16px 8px 0;\">员工管理</span>\n        <el-button v-if=\"isAdmin\" type=\"primary\" @click=\"openAddDialog\" style=\"margin-left: 24px; margin-bottom: 8px;\">+ 新增员工</el-button>\n      </div>\n      <!-- 查询条件 -->\n      <div style=\"display: flex; align-items: center; margin-bottom: 16px;\">\n        <el-input v-model=\"query.name\" placeholder=\"请输入员工姓名\" style=\"width: 180px; margin-right: 12px;\" clearable />\n        <el-select v-model=\"query.gender\" placeholder=\"性别\" style=\"width: 100px; margin-right: 12px;\" clearable>\n          <el-option label=\"男\" :value=\"1\" />\n          <el-option label=\"女\" :value=\"2\" />\n        </el-select>\n        <el-date-picker v-model=\"query.hireRange\" type=\"daterange\" range-separator=\"至\" start-placeholder=\"入职开始\" end-placeholder=\"入职结束\" style=\"margin-right: 12px;\" value-format=\"YYYY-MM-DD\" />\n        <el-button type=\"primary\" @click=\"fetchEmps\">查询</el-button>\n        <el-button @click=\"resetQuery\" style=\"margin-left: 8px;\">重置</el-button>\n      </div>\n      <!-- 员工表格 -->\n      <el-table :data=\"empList\" border v-loading=\"loading\" style=\"width: 100%;\" @sort-change=\"handleSortChange\">\n        <el-table-column type=\"selection\" width=\"50\" align=\"center\" />\n        <el-table-column label=\"工号\" prop=\"id\" :sortable=\"true\">\n          <template #default=\"scope\">\n            {{ formatEmpId(scope.row.id) }}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"name\" label=\"姓名\" align=\"center\" />\n        <el-table-column prop=\"gender\" label=\"性别\" align=\"center\">\n          <template #default=\"scope\">{{ scope.row.gender === 1 ? '男' : '女' }}</template>\n        </el-table-column>\n        <el-table-column prop=\"phone\" label=\"手机号\" align=\"center\" />\n        <el-table-column prop=\"deptName\" label=\"所属部门\" align=\"center\" />\n        <el-table-column prop=\"job\" label=\"职位\" align=\"center\">\n          <template #default=\"scope\">{{ positionMap[scope.row.job] }}</template>\n        </el-table-column>\n        <el-table-column prop=\"salary\" label=\"薪资\" align=\"center\" :sortable=\"true\" />\n        <el-table-column prop=\"entryDate\" label=\"入职时间\" align=\"center\" :sortable=\"true\">\n          <template #default=\"scope\">{{ formatDate(scope.row.entryDate) }}</template>\n        </el-table-column>\n        <el-table-column prop=\"image\" label=\"头像\" align=\"center\">\n          <template #default=\"scope\">\n            <img v-if=\"scope.row.image\" :src=\"scope.row.image\" style=\"width:40px;height:40px;border-radius:50%;object-fit:cover;\" />\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"updateTime\" label=\"最后操作时间\" align=\"center\">\n          <template #default=\"scope\">{{ formatDateTime(scope.row.updateTime) }}</template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"120\" align=\"center\" v-if=\"isAdmin\">\n          <template #default=\"scope\">\n            <span class=\"action-link\" @click=\"openEditDialog(scope.row)\">编辑</span>\n            <span class=\"action-link\" style=\"margin-left: 12px;\" @click=\"handleDelete(scope.row.id)\">删除</span>\n          </template>\n        </el-table-column>\n      </el-table>\n      <!-- 分页 -->\n      <div style=\"margin-top: 16px; text-align: right;\">\n        <el-pagination\n          background\n          layout=\"prev, pager, next, sizes, total\"\n          :total=\"total\"\n          :page-size=\"query.pageSize\"\n          :current-page=\"query.page\"\n          @current-change=\"val => { query.page = val; fetchEmps(); }\"\n          @size-change=\"val => { query.pageSize = val; query.page = 1; fetchEmps(); }\"\n          :page-sizes=\"[5, 10, 20, 50]\"\n        />\n      </div>\n    </el-card>\n\n    <!-- 新增/编辑员工弹窗 -->\n    <el-dialog :title=\"dialogTitle\" v-model=\"dialogVisible\" width=\"800px\">\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"90px\" style=\"margin-top: 16px;\">\n        <!-- 第一行：用户名、姓名 -->\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"用户名\" prop=\"username\">\n              <el-input v-model=\"form.username\" maxlength=\"20\" placeholder=\"请输入用户名，20个字符内\" />\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"姓名\" prop=\"name\">\n              <el-input v-model=\"form.name\" maxlength=\"10\" placeholder=\"请输入员工姓名，10个字符内\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <!-- 第二行：性别、手机号 -->\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"性别\" prop=\"gender\">\n              <el-select v-model=\"form.gender\" placeholder=\"请选择\">\n                <el-option label=\"男\" :value=\"1\" />\n                <el-option label=\"女\" :value=\"2\" />\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"手机号\" prop=\"phone\">\n              <el-input v-model=\"form.phone\" maxlength=\"11\" placeholder=\"请输入手机号\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <!-- 第三行：职位、薪资 -->\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"职位\" prop=\"job\">\n              <el-select v-model=\"form.job\" placeholder=\"请选择\">\n                <el-option v-for=\"(label, val) in positionMap\" :key=\"val\" :label=\"label\" :value=\"parseInt(val)\" />\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"薪资\" prop=\"salary\">\n              <el-input v-model=\"form.salary\" type=\"number\" placeholder=\"请输入薪资\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <!-- 第四行：所属部门、入职日期 -->\n        <el-row :gutter=\"20\">\n          <el-col :span=\"12\">\n            <el-form-item label=\"所属部门\" prop=\"deptId\">\n              <el-select v-model=\"form.deptId\" placeholder=\"请选择\">\n                <el-option v-for=\"dept in deptList\" :key=\"dept.id\" :label=\"dept.name\" :value=\"dept.id\" />\n              </el-select>\n            </el-form-item>\n          </el-col>\n          <el-col :span=\"12\">\n            <el-form-item label=\"入职日期\" prop=\"entryDate\">\n              <el-date-picker v-model=\"form.entryDate\" type=\"date\" value-format=\"YYYY-MM-DD\" placeholder=\"请选择入职日期\" />\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <!-- 第五行：头像 -->\n        <el-row>\n          <el-col :span=\"24\">\n            <el-form-item label=\"头像\" prop=\"image\">\n              <el-upload\n                class=\"avatar-uploader\"\n                :action=\"uploadUrl\"\n                :show-file-list=\"false\"\n                :on-success=\"handleUploadSuccess\"\n                :before-upload=\"beforeUpload\"\n                :headers=\"uploadHeaders\"\n                name=\"file\"\n              >\n                <img v-if=\"form.image\" :src=\"form.image\" class=\"avatar\" />\n                <i v-else class=\"el-icon-plus avatar-uploader-icon\"></i>\n              </el-upload>\n              <div style=\"font-size: 12px; color: #888;\">图片大小不超过2M，支持JPG/PNG/JPEG格式，建议比例1:1</div>\n            </el-form-item>\n          </el-col>\n        </el-row>\n        <!-- 第六行：工作经历 -->\n        <el-row>\n          <el-col :span=\"24\">\n            <el-form-item label=\"工作经历\">\n              <div v-for=\"(expr, idx) in form.exprList\" :key=\"idx\" style=\"display: flex; align-items: center; margin-bottom: 8px;\">\n                <el-date-picker\n                  v-model=\"expr.begin\"\n                  type=\"date\"\n                  placeholder=\"开始\"\n                  value-format=\"YYYY-MM-DD\"\n                  style=\"width: 120px; margin-right: 8px;\"\n                />\n                <span style=\"margin: 0 4px;\">-</span>\n                <el-date-picker\n                  v-model=\"expr.end\"\n                  type=\"date\"\n                  placeholder=\"结束\"\n                  value-format=\"YYYY-MM-DD\"\n                  style=\"width: 120px; margin-right: 8px;\"\n                />\n                <el-input v-model=\"expr.company\" placeholder=\"公司\" style=\"width: 120px; margin-right: 8px;\" />\n                <el-input v-model=\"expr.job\" placeholder=\"职位\" style=\"width: 120px; margin-right: 8px;\" />\n                <el-button type=\"danger\" icon=\"el-icon-delete\" @click=\"form.exprList.splice(idx, 1)\" circle />\n              </div>\n              <el-button type=\"primary\" plain icon=\"el-icon-plus\" @click=\"form.exprList.push({begin:'',end:'',company:'',job:''})\">\n                新增工作经历\n              </el-button>\n            </el-form-item>\n          </el-col>\n        </el-row>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleSubmit\">{{ isEdit ? '保存' : '新增' }}</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { ref, reactive, onMounted, computed } from 'vue'\nimport { ElMessageBox, ElMessage } from 'element-plus'\nimport dayjs from 'dayjs'\n\nconst BASE_URL = 'http://localhost:8080'\n\nexport default {\n  name: 'EmployeeManage',\n  setup() {\n    const isAdmin = computed(() => {\n      const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {}\n      return user && user.username === 'admin'\n    })\n    // 查询条件\n    const query = reactive({\n      name: '',\n      gender: '',\n      hireRange: [],\n      page: 1,\n      pageSize: 10,\n      sortField: '',\n      sortOrder: ''\n    })\n    const empList = ref([])\n    const total = ref(0)\n    const loading = ref(false)\n    const dialogVisible = ref(false)\n    const dialogTitle = ref('')\n    const isEdit = ref(false)\n    const form = reactive({\n      id: null,\n      username: '',\n      password: '',\n      name: '',\n      gender: '',\n      phone: '',\n      job: '',\n      salary: '',\n      image: '',\n      entryDate: '',\n      deptId: '',\n      createTime: '',\n      updateTime: '',\n      exprList: []\n    })\n    const formRef = ref(null)\n    const rules = {\n      username: [{ required: true, message: '请输入工号', trigger: 'blur' }],\n      name: [{ required: true, message: '请输入姓名', trigger: 'blur' }],\n      gender: [{ required: true, message: '请选择性别', trigger: 'change' }],\n      phone: [{ required: true, message: '请输入手机号', trigger: 'blur' }],\n      job: [{ required: true, message: '请选择职位', trigger: 'change' }],\n      entryDate: [{ required: true, message: '请选择入职日期', trigger: 'change' }],\n      deptId: [{ required: true, message: '请选择部门', trigger: 'change' }],\n      salary: [{ required: true, message: '请输入薪资', trigger: 'blur' }],\n      image: [{ required: true, message: '请上传头像', trigger: 'change' }]\n    }\n    const deptList = ref([\n      { id: 1, name: '人事部' },\n      { id: 2, name: '销售部' },\n      { id: 3, name: '技术部' },\n      { id: 4, name: '市场部' },\n      { id: 5, name: '财务部' },\n      { id: 6, name: '法务部' }\n    ])\n    const positionMap = {\n      1: '经理',\n      2: '总监',\n      3: '主管',\n      4: '组长',\n      5: '普通员工',\n      6: '其他'\n    }\n    // 上传相关\n    const uploadUrl = 'http://localhost:8080/emps/upload'\n    const uploadHeaders = {}\n    const handleUploadSuccess = (res, file) => {\n      console.log('上传返回内容', res);\n      if (res.data.startsWith('/upload/')) {\n        form.image = `http://localhost:8080${res.data}`;\n      } else if (res.data.startsWith('http')) {\n        form.image = res.data;\n      } else {\n        form.image = `http://localhost:8080/upload/${res.data}`;\n      }\n    }\n    const beforeUpload = (file) => {\n      const isJPG = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/jpg'\n      const isLt2M = file.size / 1024 / 1024 < 2\n      if (!isJPG) {\n        ElMessage.error('上传头像图片只能是 JPG/PNG/JPEG 格式!')\n        return false\n      }\n      if (!isLt2M) {\n        ElMessage.error('上传头像图片大小不能超过 2MB!')\n        return false\n      }\n      return true\n    }\n    // 格式化时间\n    const formatDate = (val) => {\n      if (!val) return ''\n      if (Array.isArray(val)) {\n        return dayjs(new Date(\n          val[0], val[1] - 1, val[2]\n        )).format('YYYY-MM-DD')\n      }\n      return dayjs(val).isValid() ? dayjs(val).format('YYYY-MM-DD') : val\n    }\n    const formatDateTime = (val) => {\n      if (!val) return ''\n      if (Array.isArray(val)) {\n        return dayjs(new Date(\n          val[0], val[1] - 1, val[2], val[3] || 0, val[4] || 0, val[5] || 0\n        )).format('YYYY-MM-DD HH:mm:ss')\n      }\n      return dayjs(val).isValid() ? dayjs(val).format('YYYY-MM-DD HH:mm:ss') : val\n    }\n    // 查询员工列表\n    const fetchEmps = async () => {\n      loading.value = true\n      try {\n        const params = {}\n        if (query.name) params.name = query.name\n        if (query.gender) params.gender = query.gender\n        params.page = query.page\n        params.pageSize = query.pageSize\n        if (query.hireRange && query.hireRange.length === 2) {\n          params.begin = query.hireRange[0]\n          params.end = query.hireRange[1]\n        }\n        if (query.sortField) params.sortField = query.sortField\n        if (query.sortOrder) params.sortOrder = query.sortOrder\n        const res = await axios.get(`${BASE_URL}/emps`, { params })\n        if (res.data.code === 1 && res.data.data && Array.isArray(res.data.data.rows)) {\n          empList.value = res.data.data.rows\n          total.value = res.data.data.total\n        }\n      } finally {\n        loading.value = false\n      }\n    }\n    // 处理表格排序事件\n    const handleSortChange = ({ prop, order }) => {\n      query.sortField = prop\n      query.sortOrder = order === 'ascending' ? 'asc' : order === 'descending' ? 'desc' : ''\n      query.page = 1\n      fetchEmps()\n    }\n    // 重置查询\n    const resetQuery = () => {\n      query.name = ''\n      query.gender = ''\n      query.hireRange = []\n      query.page = 1\n      fetchEmps()\n    }\n    // 打开新增弹窗\n    const openAddDialog = () => {\n      dialogTitle.value = '新增员工'\n      isEdit.value = false\n      Object.assign(form, { id: null, username: '', name: '', gender: '', phone: '', job: '', entryDate: '', deptId: '', salary: '', image: '', exprList: [] })\n      dialogVisible.value = true\n    }\n    // 打开编辑弹窗\n    const openEditDialog = async (row) => {\n      dialogTitle.value = '编辑员工'\n      isEdit.value = true\n      const res = await axios.get(`${BASE_URL}/emps/${row.id}`)\n      if (res.data.code === 1) {\n        Object.assign(form, res.data.data)\n        if (!form.exprList) form.exprList = []\n        // 工作经历时间格式转换\n        form.exprList = form.exprList.map(expr => ({\n          ...expr,\n          begin: Array.isArray(expr.begin) ? dayjs(new Date(expr.begin[0], expr.begin[1] - 1, expr.begin[2])).format('YYYY-MM-DD') : expr.begin,\n          end: Array.isArray(expr.end) ? dayjs(new Date(expr.end[0], expr.end[1] - 1, expr.end[2])).format('YYYY-MM-DD') : expr.end\n        }))\n        // 入职日期格式转换\n        if (Array.isArray(form.entryDate)) {\n          form.entryDate = dayjs(new Date(form.entryDate[0], form.entryDate[1] - 1, form.entryDate[2])).format('YYYY-MM-DD')\n        }\n      }\n      dialogVisible.value = true\n    }\n    // 新增/编辑提交\n    const handleSubmit = () => {\n      formRef.value.validate(async (valid) => {\n        if (!valid) return\n        if (isEdit.value) {\n          await axios.put(`${BASE_URL}/emps`, form)\n          ElMessage.success('修改成功')\n        } else {\n          await axios.post(`${BASE_URL}/emps`, form)\n          ElMessage.success('新增成功')\n        }\n        dialogVisible.value = false\n        fetchEmps()\n      })\n    }\n    // 删除员工\n    const handleDelete = (id) => {\n      ElMessageBox.confirm('确定要删除该员工吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        await axios.delete(`${BASE_URL}/emps`, { params: { ids: id } })\n        ElMessage.success('删除成功')\n        fetchEmps()\n      }).catch(() => {})\n    }\n    // 初始化\n    onMounted(() => {\n      fetchEmps()\n    })\n    function formatEmpId(id) {\n      return id ? id.toString().padStart(9, '0') : ''\n    }\n    return {\n      isAdmin,\n      query,\n      empList,\n      total,\n      loading,\n      dialogVisible,\n      dialogTitle,\n      isEdit,\n      form,\n      formRef,\n      rules,\n      deptList,\n      positionMap,\n      uploadUrl,\n      uploadHeaders,\n      handleUploadSuccess,\n      beforeUpload,\n      formatDate,\n      formatDateTime,\n      fetchEmps,\n      resetQuery,\n      openAddDialog,\n      openEditDialog,\n      handleSubmit,\n      handleDelete,\n      formatEmpId,\n      handleSortChange\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-card {\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n  padding: 20px;\n}\n\n.action-link {\n  color: #faad14;\n  cursor: pointer;\n  font-size: 15px;\n  transition: color 0.2s;\n}\n.action-link:hover {\n  color: #ff6700;\n  text-decoration: underline;\n}\n.avatar-uploader .avatar {\n  width: 80px;\n  height: 80px;\n  display: block;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-bottom: 8px;\n}\n.avatar-uploader-icon {\n  font-size: 32px;\n  color: #8c939d;\n  width: 80px;\n  height: 80px;\n  line-height: 80px;\n  text-align: center;\n  border: 1px dashed #d9d9d9;\n  border-radius: 50%;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}