{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createVNode as _createVNode, toDisplayString as _toDisplayString, resolveDirective as _resolveDirective, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"border-bottom\": \"2px solid #1890ff\",\n    \"margin-bottom\": \"0\"\n  }\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_el_card, null, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"span\", {\n      style: {\n        \"font-size\": \"20px\",\n        \"font-weight\": \"bold\",\n        \"color\": \"#1890ff\",\n        \"border-bottom\": \"2px solid #1890ff\",\n        \"padding\": \"0 16px 8px 0\"\n      }\n    }, \"部门管理\", -1 /* HOISTED */)), $setup.isAdmin ? (_openBlock(), _createBlock(_component_el_button, {\n      key: 0,\n      type: \"primary\",\n      onClick: $setup.openAddDialog,\n      style: {\n        \"margin-left\": \"24px\",\n        \"margin-bottom\": \"8px\"\n      }\n    }, {\n      default: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"+ 新增部门\")])),\n      _: 1 /* STABLE */,\n      __: [3]\n    }, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)]), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n      data: $setup.deptList,\n      style: {\n        \"width\": \"100%\",\n        \"margin-top\": \"16px\"\n      },\n      border: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        label: \"序号\",\n        type: \"index\",\n        width: \"60\",\n        align: \"center\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"name\",\n        label: \"部门名称\",\n        align: \"center\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"updateTime\",\n        label: \"最后操作时间\",\n        align: \"center\"\n      }, {\n        default: _withCtx(scope => [_createTextVNode(_toDisplayString($setup.formatDate(scope.row.updateTime)), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), $setup.isAdmin ? (_openBlock(), _createBlock(_component_el_table_column, {\n        key: 0,\n        label: \"操作\",\n        width: \"120\",\n        align: \"center\"\n      }, {\n        default: _withCtx(scope => [_createElementVNode(\"span\", {\n          class: \"action-link\",\n          onClick: $event => $setup.openEditDialog(scope.row)\n        }, \"编辑\", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"span\", {\n          class: \"action-link\",\n          style: {\n            \"margin-left\": \"12px\"\n          },\n          onClick: $event => $setup.handleDelete(scope.row.id)\n        }, \"删除\", 8 /* PROPS */, _hoisted_3)]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]])]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 新增/编辑部门弹窗 \"), _createVNode(_component_el_dialog, {\n    title: $setup.dialogTitle,\n    modelValue: $setup.dialogVisible,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.dialogVisible = $event),\n    width: \"400px\"\n  }, {\n    footer: _withCtx(() => [_createVNode(_component_el_button, {\n      onClick: _cache[1] || (_cache[1] = $event => $setup.dialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"取消\")])),\n      _: 1 /* STABLE */,\n      __: [5]\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.handleSubmit\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.isEdit ? '保存' : '新增'), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"onClick\"])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $setup.form,\n      rules: $setup.rules,\n      ref: \"formRef\",\n      \"label-width\": \"80px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"部门名称\",\n        prop: \"name\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.form.name,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.form.name = $event),\n          autocomplete: \"off\",\n          placeholder: \"请输入部门名称，长度为2-10位\",\n          maxlength: \"10\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\", \"rules\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"title\", \"modelValue\"])]);\n}","map":{"version":3,"names":["style","_createElementBlock","_createVNode","_component_el_card","default","_withCtx","_createElementVNode","_hoisted_1","$setup","isAdmin","_createBlock","_component_el_button","key","type","onClick","openAddDialog","_cache","_createTextVNode","_","__","_createCommentVNode","_component_el_table","data","deptList","border","_component_el_table_column","label","width","align","prop","scope","_toDisplayString","formatDate","row","updateTime","class","$event","openEditDialog","_hoisted_2","handleDelete","id","_hoisted_3","loading","_component_el_dialog","title","dialogTitle","modelValue","dialogVisible","footer","handleSubmit","isEdit","_component_el_form","model","form","rules","ref","_component_el_form_item","_component_el_input","name","autocomplete","placeholder","maxlength"],"sources":["D:\\web_code\\zxyf\\test_vue\\src\\components\\Dept.vue"],"sourcesContent":["<template>\n  <div>\n    <el-card>\n      <div style=\"display: flex; align-items: center; border-bottom: 2px solid #1890ff; margin-bottom: 0;\">\n        <span style=\"font-size: 20px; font-weight: bold; color: #1890ff; border-bottom: 2px solid #1890ff; padding: 0 16px 8px 0;\">部门管理</span>\n        <el-button v-if=\"isAdmin\" type=\"primary\" @click=\"openAddDialog\" style=\"margin-left: 24px; margin-bottom: 8px;\">+ 新增部门</el-button>\n      </div>\n      <el-table :data=\"deptList\" style=\"width: 100%; margin-top: 16px;\" v-loading=\"loading\" border>\n        <el-table-column label=\"序号\" type=\"index\" width=\"60\" align=\"center\" />\n        <el-table-column prop=\"name\" label=\"部门名称\" align=\"center\" />\n        <el-table-column prop=\"updateTime\" label=\"最后操作时间\" align=\"center\">\n          <template #default=\"scope\">\n            {{ formatDate(scope.row.updateTime) }}\n          </template>\n        </el-table-column>\n        <el-table-column label=\"操作\" width=\"120\" align=\"center\" v-if=\"isAdmin\">\n          <template #default=\"scope\">\n            <span class=\"action-link\" @click=\"openEditDialog(scope.row)\">编辑</span>\n            <span class=\"action-link\" style=\"margin-left: 12px;\" @click=\"handleDelete(scope.row.id)\">删除</span>\n          </template>\n        </el-table-column>\n      </el-table>\n    </el-card>\n\n    <!-- 新增/编辑部门弹窗 -->\n    <el-dialog :title=\"dialogTitle\" v-model=\"dialogVisible\" width=\"400px\">\n      <el-form :model=\"form\" :rules=\"rules\" ref=\"formRef\" label-width=\"80px\">\n        <el-form-item label=\"部门名称\" prop=\"name\">\n          <el-input v-model=\"form.name\" autocomplete=\"off\" placeholder=\"请输入部门名称，长度为2-10位\" maxlength=\"10\" />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"handleSubmit\">{{ isEdit ? '保存' : '新增' }}</el-button>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport { ref, reactive, onMounted, computed } from 'vue'\nimport { ElMessageBox, ElMessage } from 'element-plus'\nimport dayjs from 'dayjs'\n\nconst BASE_URL = 'http://localhost:8080'\n\nexport default {\n  name: 'DepartmentManage',\n  setup() {\n    const isAdmin = computed(() => {\n      const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : {}\n      return user && user.username === 'admin'\n    })\n    const deptList = ref([])\n    const loading = ref(false)\n    const dialogVisible = ref(false)\n    const dialogTitle = ref('')\n    const form = reactive({ id: null, name: '' })\n    const formRef = ref(null)\n    const rules = {\n      name: [\n        { required: true, message: '请输入部门名称', trigger: 'blur' },\n        { min: 2, max: 10, message: '长度为2-10位', trigger: 'blur' }\n      ]\n    }\n    const isEdit = ref(false)\n\n    // 时间格式化\n    const formatDate = (val) => {\n      if (!val) return ''\n      if (Array.isArray(val)) {\n        return dayjs(new Date(\n          val[0], val[1] - 1, val[2], val[3] || 0, val[4] || 0, val[5] || 0\n        )).format('YYYY-MM-DD HH:mm:ss')\n      }\n      return dayjs(val).isValid() ? dayjs(val).format('YYYY-MM-DD HH:mm:ss') : val\n    }\n\n    // 查询部门列表\n    const fetchDepts = async () => {\n      loading.value = true\n      try {\n        const res = await axios.get(`${BASE_URL}/depts`)\n        if (res.data.code === 1) {\n          deptList.value = res.data.data\n        }\n      } finally {\n        loading.value = false\n      }\n    }\n\n    // 打开新增弹窗\n    const openAddDialog = () => {\n      dialogTitle.value = '新增部门'\n      form.id = null\n      form.name = ''\n      isEdit.value = false\n      dialogVisible.value = true\n    }\n\n    // 打开编辑弹窗\n    const openEditDialog = async (row) => {\n      dialogTitle.value = '编辑部门'\n      isEdit.value = true\n      const res = await axios.get(`${BASE_URL}/depts/${row.id}`)\n      if (res.data.code === 1) {\n        form.id = res.data.data.id\n        form.name = res.data.data.name\n        dialogVisible.value = true\n      }\n    }\n\n    // 提交表单\n    const handleSubmit = () => {\n      formRef.value.validate(async (valid) => {\n        if (!valid) return\n        if (isEdit.value) {\n          await axios.put(`${BASE_URL}/depts`, { id: form.id, name: form.name })\n          ElMessage.success('修改成功')\n        } else {\n          await axios.post(`${BASE_URL}/depts`, { name: form.name })\n          ElMessage.success('新增成功')\n        }\n        dialogVisible.value = false\n        fetchDepts()\n      })\n    }\n\n    // 删除部门，带二次确认\n    const handleDelete = (id) => {\n      ElMessageBox.confirm('确定要删除该部门吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning',\n      }).then(async () => {\n        await axios.delete(`${BASE_URL}/depts/${id}`)\n        ElMessage.success('删除成功')\n        fetchDepts()\n      }).catch(() => {})\n    }\n\n    onMounted(() => {\n      fetchDepts()\n    })\n\n    return {\n      isAdmin,\n      deptList,\n      loading,\n      dialogVisible,\n      dialogTitle,\n      form,\n      formRef,\n      rules,\n      isEdit,\n      openAddDialog,\n      openEditDialog,\n      handleSubmit,\n      handleDelete,\n      formatDate\n    }\n  }\n}\n</script>\n\n<style scoped>\n.el-card {\n  border-radius: 12px;\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);\n  padding: 20px;\n  background-color: #f9fcff;\n}\n\n.action-link {\n  color: #faad14;\n  cursor: pointer;\n  font-size: 15px;\n  transition: color 0.2s;\n}\n.action-link:hover {\n  color: #ff6700;\n  text-decoration: underline;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}