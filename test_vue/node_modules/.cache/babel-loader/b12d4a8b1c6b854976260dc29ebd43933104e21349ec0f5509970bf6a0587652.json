{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  return _openBlock(), _createBlock(_component_el_card, null, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"span\", null, \"公告管理\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: _cache[0] || (_cache[0] = $event => $setup.openDialog('add'))\n    }, {\n      default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"新增公告\")])),\n      _: 1 /* STABLE */,\n      __: [7]\n    })])]),\n    default: _withCtx(() => [!$setup.isUpdatePage ? (_openBlock(), _createBlock(_component_el_table, {\n      key: 0,\n      data: $setup.announcements,\n      style: {\n        \"width\": \"100%\"\n      }\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"title\",\n        label: \"标题\",\n        width: \"180\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"content\",\n        label: \"内容\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"createTime\",\n        label: \"发布时间\",\n        width: \"180\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"150\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createVNode(_component_el_button, {\n          size: \"small\",\n          onClick: $event => $setup.openDialog('edit', row)\n        }, {\n          default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\"编辑\")])),\n          _: 2 /* DYNAMIC */,\n          __: [9]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          size: \"small\",\n          type: \"danger\",\n          onClick: $event => $setup.deleteAnnouncement(row)\n        }, {\n          default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\"删除\")])),\n          _: 2 /* DYNAMIC */,\n          __: [10]\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])) : (_openBlock(), _createElementBlock(_Fragment, {\n      key: 1\n    }, [_createCommentVNode(\" 更新系统公告页面 \"), _createVNode(_component_el_form, {\n      model: $setup.latestAnnouncementForm,\n      \"label-width\": \"120px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"最新公告标题\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.latestAnnouncementForm.title,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.latestAnnouncementForm.title = $event)\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, {\n        label: \"最新公告内容\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $setup.latestAnnouncementForm.content,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.latestAnnouncementForm.content = $event),\n          type: \"textarea\",\n          rows: 6\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_form_item, null, {\n        default: _withCtx(() => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          onClick: $setup.submitUpdateForm\n        }, {\n          default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\"更新公告\")])),\n          _: 1 /* STABLE */,\n          __: [11]\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"model\"])], 64 /* STABLE_FRAGMENT */)), _createVNode(_component_el_dialog, {\n      modelValue: $setup.dialogVisible,\n      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $setup.dialogVisible = $event),\n      title: $setup.dialogTitle,\n      width: \"600px\"\n    }, {\n      footer: _withCtx(() => [_createVNode(_component_el_button, {\n        onClick: _cache[5] || (_cache[5] = $event => $setup.dialogVisible = false)\n      }, {\n        default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"取消\")])),\n        _: 1 /* STABLE */,\n        __: [12]\n      }), _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitForm\n      }, {\n        default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\"保存\")])),\n        _: 1 /* STABLE */,\n        __: [13]\n      })]),\n      default: _withCtx(() => [_createVNode(_component_el_form, {\n        model: $setup.form,\n        \"label-width\": \"80px\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_form_item, {\n          label: \"标题\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $setup.form.title,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.form.title = $event)\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_form_item, {\n          label: \"内容\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_el_input, {\n            modelValue: $setup.form.content,\n            \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.form.content = $event),\n            type: \"textarea\",\n            rows: 4\n          }, null, 8 /* PROPS */, [\"modelValue\"])]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"model\"])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"modelValue\", \"title\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","_createBlock","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_1","_createVNode","_component_el_button","type","onClick","_cache","$event","$setup","openDialog","default","_createTextVNode","_","__","isUpdatePage","_component_el_table","key","data","announcements","style","_component_el_table_column","prop","label","width","row","size","deleteAnnouncement","_createElementBlock","_Fragment","_createCommentVNode","_component_el_form","model","latestAnnouncementForm","_component_el_form_item","_component_el_input","modelValue","title","content","rows","submitUpdateForm","_component_el_dialog","dialogVisible","dialogTitle","footer","submitForm","form"],"sources":["D:\\web_code\\zxyf\\test_vue\\src\\components\\Announcement.vue"],"sourcesContent":["<template>\n  <el-card>\n    <template #header>\n      <div class=\"card-header\">\n        <span>公告管理</span>\n        <el-button type=\"primary\" @click=\"openDialog('add')\">新增公告</el-button>\n      </div>\n    </template>\n\n    <!-- 公告列表页面 -->\n    <template v-if=\"!isUpdatePage\">\n      <el-table :data=\"announcements\" style=\"width: 100%\">\n        <el-table-column prop=\"title\" label=\"标题\" width=\"180\" />\n        <el-table-column prop=\"content\" label=\"内容\" />\n        <el-table-column prop=\"createTime\" label=\"发布时间\" width=\"180\" />\n        <el-table-column label=\"操作\" width=\"150\">\n          <template #default=\"{ row }\">\n            <el-button size=\"small\" @click=\"openDialog('edit', row)\">编辑</el-button>\n            <el-button size=\"small\" type=\"danger\" @click=\"deleteAnnouncement(row)\">删除</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n    </template>\n\n    <!-- 更新系统公告页面 -->\n    <template v-else>\n        <el-form :model=\"latestAnnouncementForm\" label-width=\"120px\">\n          <el-form-item label=\"最新公告标题\">\n            <el-input v-model=\"latestAnnouncementForm.title\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"最新公告内容\">\n            <el-input v-model=\"latestAnnouncementForm.content\" type=\"textarea\" :rows=\"6\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-button type=\"primary\" @click=\"submitUpdateForm\">更新公告</el-button>\n          </el-form-item>\n        </el-form>\n    </template>\n\n    <el-dialog v-model=\"dialogVisible\" :title=\"dialogTitle\" width=\"600px\">\n      <el-form :model=\"form\" label-width=\"80px\">\n        <el-form-item label=\"标题\">\n          <el-input v-model=\"form.title\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"内容\">\n          <el-input v-model=\"form.content\" type=\"textarea\" :rows=\"4\"></el-input>\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <el-button @click=\"dialogVisible = false\">取消</el-button>\n        <el-button type=\"primary\" @click=\"submitForm\">保存</el-button>\n      </template>\n    </el-dialog>\n  </el-card>\n</template>\n\n<script setup>\nimport { ref, onMounted, computed } from 'vue';\nimport axios from 'axios';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport dayjs from 'dayjs';\nimport { useRoute } from 'vue-router';\n\nconst announcements = ref([]);\nconst dialogVisible = ref(false);\nconst dialogTitle = ref('');\nconst form = ref({\n  id: null,\n  title: '',\n  content: ''\n});\nconst isEditing = ref(false);\n\nconst route = useRoute();\n\nconst isUpdatePage = computed(() => route.path === '/announcement/update');\nconst latestAnnouncementForm = ref({\n  id: null,\n  title: '',\n  content: ''\n});\n\nconst fetchAnnouncements = async () => {\n  try {\n    const res = await axios.get('/announcement');\n    if (res.data.code === 1) {\n      // 格式化时间\n      announcements.value = res.data.data.map(item => ({\n        ...item,\n        createTime: dayjs(item.createTime).format('YYYY-MM-DD HH:mm:ss')\n      }));\n    }\n  } catch (error) {\n    ElMessage.error('获取公告列表失败');\n    console.error(error);\n  }\n};\n\nconst fetchLatestAnnouncement = async () => {\n  try {\n    const res = await axios.get('/announcement/latest');\n    if (res.data.code === 1 && res.data.data) {\n      latestAnnouncementForm.value = res.data.data;\n    } else {\n      ElMessage.info('暂无系统公告可更新。');\n      latestAnnouncementForm.value = { id: null, title: '', content: '' };\n    }\n  } catch (error) {\n    ElMessage.error('获取最新公告失败');\n    console.error(error);\n  }\n};\n\nconst openDialog = (type, row = null) => {\n  if (type === 'add') {\n    dialogTitle.value = '新增公告';\n    form.value = { id: null, title: '', content: '' };\n    isEditing.value = false;\n  } else { // edit\n    dialogTitle.value = '编辑公告';\n    form.value = { ...row }; // 复制现有数据\n    isEditing.value = true;\n  }\n  dialogVisible.value = true;\n};\n\nconst submitForm = async () => {\n  try {\n    let res;\n    if (isEditing.value) {\n      res = await axios.put(`/announcement/${form.value.id}`, form.value);\n    } else {\n      res = await axios.post('/announcement', form.value);\n    }\n\n    if (res.data.code === 1) {\n      ElMessage.success(`${isEditing.value ? '更新' : '新增'}成功`);\n      dialogVisible.value = false;\n      fetchAnnouncements(); // 刷新列表\n    } else {\n      ElMessage.error(res.data.msg || `${isEditing.value ? '更新' : '新增'}失败`);\n    }\n  } catch (error) {\n    ElMessage.error(`${isEditing.value ? '更新' : '新增'}异常`);\n    console.error(error);\n  }\n};\n\nconst submitUpdateForm = async () => {\n  if (!latestAnnouncementForm.value.title || !latestAnnouncementForm.value.content) {\n    ElMessage.warning('标题和内容不能为空');\n    return;\n  }\n  try {\n    const res = await axios.put(`/announcement/${latestAnnouncementForm.value.id}`, latestAnnouncementForm.value);\n    if (res.data.code === 1) {\n      ElMessage.success('系统公告更新成功');\n    } else {\n      ElMessage.error(res.data.msg || '系统公告更新失败');\n    }\n  } catch (error) {\n    ElMessage.error('更新系统公告异常');\n    console.error(error);\n  }\n};\n\nconst deleteAnnouncement = async (row) => {\n  ElMessageBox.confirm(`确定删除公告 \"${row.title}\" 吗?`, '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning',\n  }).then(async () => {\n    try {\n      const res = await axios.delete(`/announcement/${row.id}`);\n      if (res.data.code === 1) {\n        ElMessage.success('删除成功');\n        fetchAnnouncements(); // 刷新列表\n      } else {\n        ElMessage.error(res.data.msg || '删除失败');\n      }\n    } catch (error) {\n      ElMessage.error('删除异常');\n      console.error(error);\n    }\n  }).catch(() => {\n    ElMessage.info('已取消删除');\n  });\n};\n\nonMounted(() => {\n  if (isUpdatePage.value) {\n    fetchLatestAnnouncement();\n  } else {\n    fetchAnnouncements();\n  }\n});\n</script>\n\n<style scoped>\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}