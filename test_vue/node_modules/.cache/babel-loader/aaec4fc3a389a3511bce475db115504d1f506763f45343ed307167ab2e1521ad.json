{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport { ElMessage, ElCard, ElTable, ElTableColumn, ElTag, ElButton, ElEmpty } from 'element-plus';\nimport dayjs from 'dayjs';\nexport default {\n  __name: 'NotificationList',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const notifications = ref([]);\n    const loading = ref(false);\n    const fetchNotifications = async () => {\n      loading.value = true;\n      try {\n        const res = await axios.get('/notification/my', {\n          headers: {\n            token: localStorage.getItem('token')\n          }\n        });\n        if (res.data.code === 1) {\n          notifications.value = res.data.data;\n        }\n      } catch (error) {\n        ElMessage.error('获取通知失败');\n        console.error(error);\n      } finally {\n        loading.value = false;\n      }\n    };\n    const markAsRead = async id => {\n      try {\n        const res = await axios.post(`/notification/markAsRead/${id}`, null, {\n          headers: {\n            token: localStorage.getItem('token')\n          }\n        });\n        if (res.data.code === 1) {\n          ElMessage.success('标记成功');\n          fetchNotifications(); // 刷新列表\n        } else {\n          ElMessage.error(res.data.msg || '标记失败');\n        }\n      } catch (error) {\n        ElMessage.error('操作失败');\n        console.error(error);\n      }\n    };\n    const deleteNotification = async id => {\n      try {\n        const res = await axios.delete(`/notification/delete/${id}`, {\n          headers: {\n            token: localStorage.getItem('token')\n          }\n        });\n        if (res.data.code === 1) {\n          ElMessage.success('删除成功');\n          fetchNotifications(); // 刷新列表\n        } else {\n          ElMessage.error(res.data.msg || '删除失败');\n        }\n      } catch (error) {\n        ElMessage.error('操作失败');\n        console.error(error);\n      }\n    };\n    function formatDate(val) {\n      return dayjs(val).format('YYYY-MM-DD HH:mm:ss');\n    }\n    onMounted(fetchNotifications);\n    const __returned__ = {\n      notifications,\n      loading,\n      fetchNotifications,\n      markAsRead,\n      deleteNotification,\n      formatDate,\n      ref,\n      onMounted,\n      get axios() {\n        return axios;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElCard() {\n        return ElCard;\n      },\n      get ElTable() {\n        return ElTable;\n      },\n      get ElTableColumn() {\n        return ElTableColumn;\n      },\n      get ElTag() {\n        return ElTag;\n      },\n      get ElButton() {\n        return ElButton;\n      },\n      get ElEmpty() {\n        return ElEmpty;\n      },\n      get dayjs() {\n        return dayjs;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","axios","ElMessage","ElCard","ElTable","ElTableColumn","ElTag","ElButton","ElEmpty","dayjs","notifications","loading","fetchNotifications","value","res","get","headers","token","localStorage","getItem","data","code","error","console","markAsRead","id","post","success","msg","deleteNotification","delete","formatDate","val","format"],"sources":["D:/web_code/zxyf/test_vue/src/components/NotificationList.vue"],"sourcesContent":["<template>\r\n  <div class=\"notification-container\">\r\n    <el-card class=\"notification-card\">\r\n      <template #header>\r\n        <div class=\"card-header\">\r\n          <span class=\"header-title\">我的通知</span>\r\n          <div class=\"header-desc\">查看您的所有站内通知</div>\r\n        </div>\r\n      </template>\r\n\r\n      <el-table\r\n        :data=\"notifications\"\r\n        style=\"width: 100%\"\r\n        v-loading=\"loading\"\r\n        :header-cell-style=\"{ background: '#f5f7fa', color: '#606266' }\"\r\n      >\r\n        <el-table-column label=\"状态\" width=\"80\">\r\n          <template #default=\"scope\">\r\n            <el-tag v-if=\"!scope.row.isRead\" type=\"danger\" size=\"small\">未读</el-tag>\r\n            <el-tag v-else type=\"info\" size=\"small\">已读</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"content\" label=\"通知内容\" show-overflow-tooltip />\r\n        <el-table-column label=\"创建时间\" width=\"180\">\r\n           <template #default=\"scope\">\r\n             {{ formatDate(scope.row.createTime) }}\r\n           </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" width=\"100\" fixed=\"right\">\r\n          <template #default=\"scope\">\r\n            <el-button\r\n              v-if=\"!scope.row.isRead\"\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              @click=\"markAsRead(scope.row.id)\"\r\n            >标记已读</el-button>\r\n             <el-button\r\n               type=\"danger\"\r\n               size=\"small\"\r\n               @click=\"deleteNotification(scope.row.id)\"\r\n             >删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n       <el-empty v-if=\"!loading && notifications.length === 0\" description=\"暂无通知\"></el-empty>\r\n\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport axios from 'axios'\r\nimport { ElMessage, ElCard, ElTable, ElTableColumn, ElTag, ElButton, ElEmpty } from 'element-plus'\r\nimport dayjs from 'dayjs'\r\n\r\nconst notifications = ref([])\r\nconst loading = ref(false)\r\n\r\nconst fetchNotifications = async () => {\r\n  loading.value = true\r\n  try {\r\n    const res = await axios.get('/notification/my', { headers: { token: localStorage.getItem('token') } })\r\n    if (res.data.code === 1) {\r\n      notifications.value = res.data.data\r\n    }\r\n  } catch (error) {\r\n     ElMessage.error('获取通知失败');\r\n     console.error(error);\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nconst markAsRead = async (id) => {\r\n   try {\r\n     const res = await axios.post(`/notification/markAsRead/${id}`, null, { headers: { token: localStorage.getItem('token') } })\r\n     if (res.data.code === 1) {\r\n       ElMessage.success('标记成功');\r\n       fetchNotifications(); // 刷新列表\r\n     } else {\r\n       ElMessage.error(res.data.msg || '标记失败');\r\n     }\r\n   } catch (error) {\r\n      ElMessage.error('操作失败');\r\n      console.error(error);\r\n   }\r\n}\r\n\r\nconst deleteNotification = async (id) => {\r\n    try {\r\n     const res = await axios.delete(`/notification/delete/${id}`, { headers: { token: localStorage.getItem('token') } })\r\n     if (res.data.code === 1) {\r\n       ElMessage.success('删除成功');\r\n       fetchNotifications(); // 刷新列表\r\n     } else {\r\n       ElMessage.error(res.data.msg || '删除失败');\r\n     }\r\n   } catch (error) {\r\n      ElMessage.error('操作失败');\r\n      console.error(error);\r\n   }\r\n}\r\n\r\nfunction formatDate(val) {\r\n  return dayjs(val).format('YYYY-MM-DD HH:mm:ss')\r\n}\r\n\r\nonMounted(fetchNotifications)\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.notification-container {\r\n  padding: 20px;\r\n  background-color: #f0f2f5; /* 轻微的背景色 */\r\n  min-height: calc(100vh - 64px - 40px); /* 减去header和padding的高度 */\r\n}\r\n\r\n.notification-card {\r\n  border-radius: 12px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.06);\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.notification-card:hover {\r\n   transform: translateY(-2px);\r\n   box-shadow: 0 6px 24px rgba(0, 0, 0, 0.08);\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 4px;\r\n}\r\n\r\n.header-title {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #333;\r\n}\r\n\r\n.header-desc {\r\n  font-size: 13px;\r\n  color: #909399;\r\n}\r\n\r\n:deep(.el-table) {\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\n:deep(.el-table th) {\r\n  background-color: #f5f7fa;\r\n  font-weight: bold;\r\n}\r\n\r\n.el-empty {\r\n    padding: 40px 0;\r\n}\r\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}